// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Advisor.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// The details of Advisor Score
    /// </summary>
    public partial class ScoreEntity
    {
        /// <summary>
        /// Initializes a new instance of the ScoreEntity class.
        /// </summary>
        public ScoreEntity()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ScoreEntity class.
        /// </summary>
        /// <param name="date">The date score was calculated.</param>
        /// <param name="score">The percentage score.</param>
        /// <param name="consumptionUnits">The consumption units for the
        /// score.</param>
        /// <param name="impactedResourceCount">The number of impacted
        /// resources.</param>
        /// <param name="potentialScoreIncrease">The potential percentage
        /// increase in overall score at subscription level once all
        /// recommendations in this scope are implemented.</param>
        /// <param name="categoryCount">The count of impacted
        /// categories.</param>
        public ScoreEntity(string date = default(string), double? score = default(double?), double? consumptionUnits = default(double?), double? impactedResourceCount = default(double?), double? potentialScoreIncrease = default(double?), double? categoryCount = default(double?))
        {
            Date = date;
            Score = score;
            ConsumptionUnits = consumptionUnits;
            ImpactedResourceCount = impactedResourceCount;
            PotentialScoreIncrease = potentialScoreIncrease;
            CategoryCount = categoryCount;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the date score was calculated.
        /// </summary>
        [JsonProperty(PropertyName = "date")]
        public string Date { get; set; }

        /// <summary>
        /// Gets or sets the percentage score.
        /// </summary>
        [JsonProperty(PropertyName = "score")]
        public double? Score { get; set; }

        /// <summary>
        /// Gets or sets the consumption units for the score.
        /// </summary>
        [JsonProperty(PropertyName = "consumptionUnits")]
        public double? ConsumptionUnits { get; set; }

        /// <summary>
        /// Gets or sets the number of impacted resources.
        /// </summary>
        [JsonProperty(PropertyName = "impactedResourceCount")]
        public double? ImpactedResourceCount { get; set; }

        /// <summary>
        /// Gets or sets the potential percentage increase in overall score at
        /// subscription level once all recommendations in this scope are
        /// implemented.
        /// </summary>
        [JsonProperty(PropertyName = "potentialScoreIncrease")]
        public double? PotentialScoreIncrease { get; set; }

        /// <summary>
        /// Gets the count of impacted categories.
        /// </summary>
        [JsonProperty(PropertyName = "categoryCount")]
        public double? CategoryCount { get; private set; }

    }
}
