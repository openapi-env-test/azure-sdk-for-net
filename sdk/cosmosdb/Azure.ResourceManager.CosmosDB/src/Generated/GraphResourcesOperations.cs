// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Core.Pipeline;
using Azure.ResourceManager.CosmosDB.Models;

namespace Azure.ResourceManager.CosmosDB
{
    /// <summary> The GraphResources service client. </summary>
    public partial class GraphResourcesOperations
    {
        private readonly ClientDiagnostics _clientDiagnostics;
        private readonly HttpPipeline _pipeline;
        internal GraphResourcesRestOperations RestClient { get; }

        /// <summary> Initializes a new instance of GraphResourcesOperations for mocking. </summary>
        protected GraphResourcesOperations()
        {
        }

        /// <summary> Initializes a new instance of GraphResourcesOperations. </summary>
        /// <param name="clientDiagnostics"> The handler for diagnostic messaging in the client. </param>
        /// <param name="pipeline"> The HTTP pipeline for sending and receiving REST requests and responses. </param>
        /// <param name="subscriptionId"> The ID of the target subscription. </param>
        /// <param name="endpoint"> server parameter. </param>
        /// <param name="apiVersion"> Api Version. </param>
        internal GraphResourcesOperations(ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, string subscriptionId, Uri endpoint = null, string apiVersion = "2021-07-01-preview")
        {
            RestClient = new GraphResourcesRestOperations(clientDiagnostics, pipeline, subscriptionId, endpoint, apiVersion);
            _clientDiagnostics = clientDiagnostics;
            _pipeline = pipeline;
        }

        /// <summary> Gets the Graph resource under an existing Azure Cosmos DB database account with the provided name. </summary>
        /// <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
        /// <param name="accountName"> Cosmos DB database account name. </param>
        /// <param name="graphName"> Cosmos DB graph resource name. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        public virtual async Task<Response<GraphResourceGetResults>> GetGraphAsync(string resourceGroupName, string accountName, string graphName, CancellationToken cancellationToken = default)
        {
            using var scope = _clientDiagnostics.CreateScope("GraphResourcesOperations.GetGraph");
            scope.Start();
            try
            {
                return await RestClient.GetGraphAsync(resourceGroupName, accountName, graphName, cancellationToken).ConfigureAwait(false);
            }
            catch (Exception e)
            {
                scope.Failed(e);
                throw;
            }
        }

        /// <summary> Gets the Graph resource under an existing Azure Cosmos DB database account with the provided name. </summary>
        /// <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
        /// <param name="accountName"> Cosmos DB database account name. </param>
        /// <param name="graphName"> Cosmos DB graph resource name. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        public virtual Response<GraphResourceGetResults> GetGraph(string resourceGroupName, string accountName, string graphName, CancellationToken cancellationToken = default)
        {
            using var scope = _clientDiagnostics.CreateScope("GraphResourcesOperations.GetGraph");
            scope.Start();
            try
            {
                return RestClient.GetGraph(resourceGroupName, accountName, graphName, cancellationToken);
            }
            catch (Exception e)
            {
                scope.Failed(e);
                throw;
            }
        }

        /// <summary> Lists the graphs under an existing Azure Cosmos DB database account. </summary>
        /// <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
        /// <param name="accountName"> Cosmos DB database account name. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="resourceGroupName"/> or <paramref name="accountName"/> is null. </exception>
        public virtual AsyncPageable<GraphResourceGetResults> ListGraphsAsync(string resourceGroupName, string accountName, CancellationToken cancellationToken = default)
        {
            if (resourceGroupName == null)
            {
                throw new ArgumentNullException(nameof(resourceGroupName));
            }
            if (accountName == null)
            {
                throw new ArgumentNullException(nameof(accountName));
            }

            async Task<Page<GraphResourceGetResults>> FirstPageFunc(int? pageSizeHint)
            {
                using var scope = _clientDiagnostics.CreateScope("GraphResourcesOperations.ListGraphs");
                scope.Start();
                try
                {
                    var response = await RestClient.ListGraphsAsync(resourceGroupName, accountName, cancellationToken).ConfigureAwait(false);
                    return Page.FromValues(response.Value.Value, null, response.GetRawResponse());
                }
                catch (Exception e)
                {
                    scope.Failed(e);
                    throw;
                }
            }
            return PageableHelpers.CreateAsyncEnumerable(FirstPageFunc, null);
        }

        /// <summary> Lists the graphs under an existing Azure Cosmos DB database account. </summary>
        /// <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
        /// <param name="accountName"> Cosmos DB database account name. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="resourceGroupName"/> or <paramref name="accountName"/> is null. </exception>
        public virtual Pageable<GraphResourceGetResults> ListGraphs(string resourceGroupName, string accountName, CancellationToken cancellationToken = default)
        {
            if (resourceGroupName == null)
            {
                throw new ArgumentNullException(nameof(resourceGroupName));
            }
            if (accountName == null)
            {
                throw new ArgumentNullException(nameof(accountName));
            }

            Page<GraphResourceGetResults> FirstPageFunc(int? pageSizeHint)
            {
                using var scope = _clientDiagnostics.CreateScope("GraphResourcesOperations.ListGraphs");
                scope.Start();
                try
                {
                    var response = RestClient.ListGraphs(resourceGroupName, accountName, cancellationToken);
                    return Page.FromValues(response.Value.Value, null, response.GetRawResponse());
                }
                catch (Exception e)
                {
                    scope.Failed(e);
                    throw;
                }
            }
            return PageableHelpers.CreateEnumerable(FirstPageFunc, null);
        }

        /// <summary> Create or update an Azure Cosmos DB Graph. </summary>
        /// <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
        /// <param name="accountName"> Cosmos DB database account name. </param>
        /// <param name="graphName"> Cosmos DB graph resource name. </param>
        /// <param name="createUpdateGraphParameters"> The parameters to provide for the current graph. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="resourceGroupName"/>, <paramref name="accountName"/>, <paramref name="graphName"/>, or <paramref name="createUpdateGraphParameters"/> is null. </exception>
        public virtual async Task<GraphResourcesCreateUpdateGraphOperation> StartCreateUpdateGraphAsync(string resourceGroupName, string accountName, string graphName, GraphResourceCreateUpdateParameters createUpdateGraphParameters, CancellationToken cancellationToken = default)
        {
            if (resourceGroupName == null)
            {
                throw new ArgumentNullException(nameof(resourceGroupName));
            }
            if (accountName == null)
            {
                throw new ArgumentNullException(nameof(accountName));
            }
            if (graphName == null)
            {
                throw new ArgumentNullException(nameof(graphName));
            }
            if (createUpdateGraphParameters == null)
            {
                throw new ArgumentNullException(nameof(createUpdateGraphParameters));
            }

            using var scope = _clientDiagnostics.CreateScope("GraphResourcesOperations.StartCreateUpdateGraph");
            scope.Start();
            try
            {
                var originalResponse = await RestClient.CreateUpdateGraphAsync(resourceGroupName, accountName, graphName, createUpdateGraphParameters, cancellationToken).ConfigureAwait(false);
                return new GraphResourcesCreateUpdateGraphOperation(_clientDiagnostics, _pipeline, RestClient.CreateCreateUpdateGraphRequest(resourceGroupName, accountName, graphName, createUpdateGraphParameters).Request, originalResponse);
            }
            catch (Exception e)
            {
                scope.Failed(e);
                throw;
            }
        }

        /// <summary> Create or update an Azure Cosmos DB Graph. </summary>
        /// <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
        /// <param name="accountName"> Cosmos DB database account name. </param>
        /// <param name="graphName"> Cosmos DB graph resource name. </param>
        /// <param name="createUpdateGraphParameters"> The parameters to provide for the current graph. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="resourceGroupName"/>, <paramref name="accountName"/>, <paramref name="graphName"/>, or <paramref name="createUpdateGraphParameters"/> is null. </exception>
        public virtual GraphResourcesCreateUpdateGraphOperation StartCreateUpdateGraph(string resourceGroupName, string accountName, string graphName, GraphResourceCreateUpdateParameters createUpdateGraphParameters, CancellationToken cancellationToken = default)
        {
            if (resourceGroupName == null)
            {
                throw new ArgumentNullException(nameof(resourceGroupName));
            }
            if (accountName == null)
            {
                throw new ArgumentNullException(nameof(accountName));
            }
            if (graphName == null)
            {
                throw new ArgumentNullException(nameof(graphName));
            }
            if (createUpdateGraphParameters == null)
            {
                throw new ArgumentNullException(nameof(createUpdateGraphParameters));
            }

            using var scope = _clientDiagnostics.CreateScope("GraphResourcesOperations.StartCreateUpdateGraph");
            scope.Start();
            try
            {
                var originalResponse = RestClient.CreateUpdateGraph(resourceGroupName, accountName, graphName, createUpdateGraphParameters, cancellationToken);
                return new GraphResourcesCreateUpdateGraphOperation(_clientDiagnostics, _pipeline, RestClient.CreateCreateUpdateGraphRequest(resourceGroupName, accountName, graphName, createUpdateGraphParameters).Request, originalResponse);
            }
            catch (Exception e)
            {
                scope.Failed(e);
                throw;
            }
        }

        /// <summary> Deletes an existing Azure Cosmos DB Graph Resource. </summary>
        /// <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
        /// <param name="accountName"> Cosmos DB database account name. </param>
        /// <param name="graphName"> Cosmos DB graph resource name. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="resourceGroupName"/>, <paramref name="accountName"/>, or <paramref name="graphName"/> is null. </exception>
        public virtual async Task<GraphResourcesDeleteGraphResourceOperation> StartDeleteGraphResourceAsync(string resourceGroupName, string accountName, string graphName, CancellationToken cancellationToken = default)
        {
            if (resourceGroupName == null)
            {
                throw new ArgumentNullException(nameof(resourceGroupName));
            }
            if (accountName == null)
            {
                throw new ArgumentNullException(nameof(accountName));
            }
            if (graphName == null)
            {
                throw new ArgumentNullException(nameof(graphName));
            }

            using var scope = _clientDiagnostics.CreateScope("GraphResourcesOperations.StartDeleteGraphResource");
            scope.Start();
            try
            {
                var originalResponse = await RestClient.DeleteGraphResourceAsync(resourceGroupName, accountName, graphName, cancellationToken).ConfigureAwait(false);
                return new GraphResourcesDeleteGraphResourceOperation(_clientDiagnostics, _pipeline, RestClient.CreateDeleteGraphResourceRequest(resourceGroupName, accountName, graphName).Request, originalResponse);
            }
            catch (Exception e)
            {
                scope.Failed(e);
                throw;
            }
        }

        /// <summary> Deletes an existing Azure Cosmos DB Graph Resource. </summary>
        /// <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
        /// <param name="accountName"> Cosmos DB database account name. </param>
        /// <param name="graphName"> Cosmos DB graph resource name. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="resourceGroupName"/>, <paramref name="accountName"/>, or <paramref name="graphName"/> is null. </exception>
        public virtual GraphResourcesDeleteGraphResourceOperation StartDeleteGraphResource(string resourceGroupName, string accountName, string graphName, CancellationToken cancellationToken = default)
        {
            if (resourceGroupName == null)
            {
                throw new ArgumentNullException(nameof(resourceGroupName));
            }
            if (accountName == null)
            {
                throw new ArgumentNullException(nameof(accountName));
            }
            if (graphName == null)
            {
                throw new ArgumentNullException(nameof(graphName));
            }

            using var scope = _clientDiagnostics.CreateScope("GraphResourcesOperations.StartDeleteGraphResource");
            scope.Start();
            try
            {
                var originalResponse = RestClient.DeleteGraphResource(resourceGroupName, accountName, graphName, cancellationToken);
                return new GraphResourcesDeleteGraphResourceOperation(_clientDiagnostics, _pipeline, RestClient.CreateDeleteGraphResourceRequest(resourceGroupName, accountName, graphName).Request, originalResponse);
            }
            catch (Exception e)
            {
                scope.Failed(e);
                throw;
            }
        }
    }
}
