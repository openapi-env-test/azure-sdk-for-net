// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.CosmosDB.Models
{
    /// <summary> The ClusterNodeStatusNodesItem. </summary>
    public partial class ClusterNodeStatusNodesItem
    {
        /// <summary> Initializes a new instance of ClusterNodeStatusNodesItem. </summary>
        internal ClusterNodeStatusNodesItem()
        {
            Tokens = new ChangeTrackingList<string>();
        }

        /// <summary> Initializes a new instance of ClusterNodeStatusNodesItem. </summary>
        /// <param name="datacenter"> The Cassandra data center this node resides in. </param>
        /// <param name="status"> Indicates whether the node is functioning or not. </param>
        /// <param name="state"> The state of the node in relation to the cluster. </param>
        /// <param name="address"> The node&apos;s URL. </param>
        /// <param name="load"> The amount of file system data in the data directory (e.g., 47.66 KB), excluding all content in the snapshots subdirectories. Because all SSTable data files are included, any data that is not cleaned up (such as TTL-expired cell or tombstoned data) is counted. </param>
        /// <param name="tokens"> List of tokens. </param>
        /// <param name="owns"> The percentage of the data owned by the node per datacenter times the replication factor (e.g., 33.3, or null if the data is not available). For example, a node can own 33% of the ring, but shows 100% if the replication factor is 3. For non-system keyspaces, the endpoint percentage ownership information is shown. </param>
        /// <param name="hostId"> The network ID of the node. </param>
        /// <param name="rack"> The rack this node is part of. </param>
        internal ClusterNodeStatusNodesItem(string datacenter, NodeStatus? status, NodeState? state, string address, string load, IReadOnlyList<string> tokens, double? owns, string hostId, string rack)
        {
            Datacenter = datacenter;
            Status = status;
            State = state;
            Address = address;
            Load = load;
            Tokens = tokens;
            Owns = owns;
            HostId = hostId;
            Rack = rack;
        }

        /// <summary> The Cassandra data center this node resides in. </summary>
        public string Datacenter { get; }
        /// <summary> Indicates whether the node is functioning or not. </summary>
        public NodeStatus? Status { get; }
        /// <summary> The state of the node in relation to the cluster. </summary>
        public NodeState? State { get; }
        /// <summary> The node&apos;s URL. </summary>
        public string Address { get; }
        /// <summary> The amount of file system data in the data directory (e.g., 47.66 KB), excluding all content in the snapshots subdirectories. Because all SSTable data files are included, any data that is not cleaned up (such as TTL-expired cell or tombstoned data) is counted. </summary>
        public string Load { get; }
        /// <summary> List of tokens. </summary>
        public IReadOnlyList<string> Tokens { get; }
        /// <summary> The percentage of the data owned by the node per datacenter times the replication factor (e.g., 33.3, or null if the data is not available). For example, a node can own 33% of the ring, but shows 100% if the replication factor is 3. For non-system keyspaces, the endpoint percentage ownership information is shown. </summary>
        public double? Owns { get; }
        /// <summary> The network ID of the node. </summary>
        public string HostId { get; }
        /// <summary> The rack this node is part of. </summary>
        public string Rack { get; }
    }
}
