// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.CosmosDB.Models
{
    public partial class DataCenterResourceProperties : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(ProvisioningState))
            {
                writer.WritePropertyName("provisioningState");
                writer.WriteStringValue(ProvisioningState.Value.ToString());
            }
            if (Optional.IsDefined(DataCenterLocation))
            {
                writer.WritePropertyName("dataCenterLocation");
                writer.WriteStringValue(DataCenterLocation);
            }
            if (Optional.IsDefined(DelegatedSubnetId))
            {
                writer.WritePropertyName("delegatedSubnetId");
                writer.WriteStringValue(DelegatedSubnetId);
            }
            if (Optional.IsDefined(NodeCount))
            {
                writer.WritePropertyName("nodeCount");
                writer.WriteNumberValue(NodeCount.Value);
            }
            if (Optional.IsDefined(Base64EncodedCassandraYamlFragment))
            {
                writer.WritePropertyName("base64EncodedCassandraYamlFragment");
                writer.WriteStringValue(Base64EncodedCassandraYamlFragment);
            }
            writer.WriteEndObject();
        }

        internal static DataCenterResourceProperties DeserializeDataCenterResourceProperties(JsonElement element)
        {
            Optional<ManagedCassandraProvisioningState> provisioningState = default;
            Optional<string> dataCenterLocation = default;
            Optional<string> delegatedSubnetId = default;
            Optional<int> nodeCount = default;
            Optional<IReadOnlyList<SeedNode>> seedNodes = default;
            Optional<string> base64EncodedCassandraYamlFragment = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("provisioningState"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    provisioningState = new ManagedCassandraProvisioningState(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("dataCenterLocation"))
                {
                    dataCenterLocation = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("delegatedSubnetId"))
                {
                    delegatedSubnetId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("nodeCount"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    nodeCount = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("seedNodes"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<SeedNode> array = new List<SeedNode>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(SeedNode.DeserializeSeedNode(item));
                    }
                    seedNodes = array;
                    continue;
                }
                if (property.NameEquals("base64EncodedCassandraYamlFragment"))
                {
                    base64EncodedCassandraYamlFragment = property.Value.GetString();
                    continue;
                }
            }
            return new DataCenterResourceProperties(Optional.ToNullable(provisioningState), dataCenterLocation.Value, delegatedSubnetId.Value, Optional.ToNullable(nodeCount), Optional.ToList(seedNodes), base64EncodedCassandraYamlFragment.Value);
        }
    }
}
