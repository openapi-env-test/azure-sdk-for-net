// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.CosmosDB.Models
{
    public partial class ClusterNodeStatusNodesItem
    {
        internal static ClusterNodeStatusNodesItem DeserializeClusterNodeStatusNodesItem(JsonElement element)
        {
            Optional<string> datacenter = default;
            Optional<NodeStatus> status = default;
            Optional<NodeState> state = default;
            Optional<string> address = default;
            Optional<string> load = default;
            Optional<IReadOnlyList<string>> tokens = default;
            Optional<double> owns = default;
            Optional<string> hostId = default;
            Optional<string> rack = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("datacenter"))
                {
                    datacenter = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("status"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    status = new NodeStatus(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("state"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    state = new NodeState(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("address"))
                {
                    address = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("load"))
                {
                    load = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("tokens"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<string> array = new List<string>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(item.GetString());
                    }
                    tokens = array;
                    continue;
                }
                if (property.NameEquals("owns"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    owns = property.Value.GetDouble();
                    continue;
                }
                if (property.NameEquals("hostId"))
                {
                    hostId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("rack"))
                {
                    rack = property.Value.GetString();
                    continue;
                }
            }
            return new ClusterNodeStatusNodesItem(datacenter.Value, Optional.ToNullable(status), Optional.ToNullable(state), address.Value, load.Value, Optional.ToList(tokens), Optional.ToNullable(owns), hostId.Value, rack.Value);
        }
    }
}
