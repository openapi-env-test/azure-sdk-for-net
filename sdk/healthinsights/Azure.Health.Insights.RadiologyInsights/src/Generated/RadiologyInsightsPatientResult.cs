// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;
using Azure.Core;

namespace Azure.Health.Insights.RadiologyInsights
{
    /// <summary> Results of the model's work for a single patient. </summary>
    public partial class RadiologyInsightsPatientResult
    {
        /// <summary> Initializes a new instance of <see cref="RadiologyInsightsPatientResult"/>. </summary>
        /// <param name="patientId"> Identifier given for the patient in the request. </param>
        /// <param name="inferences"> The model's inferences for the given patient. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="patientId"/> or <paramref name="inferences"/> is null. </exception>
        public RadiologyInsightsPatientResult(string patientId, IEnumerable<FhirR4Extendible> inferences)
        {
            Argument.AssertNotNull(patientId, nameof(patientId));
            Argument.AssertNotNull(inferences, nameof(inferences));

            PatientId = patientId;
            Inferences = inferences.ToList();
        }

        /// <summary> Initializes a new instance of <see cref="RadiologyInsightsPatientResult"/>. </summary>
        /// <param name="patientId"> Identifier given for the patient in the request. </param>
        /// <param name="inferences"> The model's inferences for the given patient. </param>
        internal RadiologyInsightsPatientResult(string patientId, IList<FhirR4Extendible> inferences)
        {
            PatientId = patientId;
            Inferences = inferences;
        }

        /// <summary> Identifier given for the patient in the request. </summary>
        public string PatientId { get; set; }
        /// <summary> The model's inferences for the given patient. </summary>
        public IList<FhirR4Extendible> Inferences { get; }
    }
}
