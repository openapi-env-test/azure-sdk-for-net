// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.EnterpriseKnowledgeGraphService
{
    using Microsoft.Rest;
    using Microsoft.Rest.Azure;
    using Models;
    using System.Collections;
    using System.Collections.Generic;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for EnterpriseKnowledgeGraphOperations.
    /// </summary>
    public static partial class EnterpriseKnowledgeGraphOperationsExtensions
    {
            /// <summary>
            /// Creates a EnterpriseKnowledgeGraph Service. EnterpriseKnowledgeGraph
            /// Service is a resource group wide resource type.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the EnterpriseKnowledgeGraph resource group in the user
            /// subscription.
            /// </param>
            /// <param name='resourceName'>
            /// The name of the EnterpriseKnowledgeGraph resource.
            /// </param>
            /// <param name='parameters'>
            /// The parameters to provide for the created EnterpriseKnowledgeGraph.
            /// </param>
            public static EnterpriseKnowledgeGraph Create(this IEnterpriseKnowledgeGraphOperations operations, string resourceGroupName, string resourceName, EnterpriseKnowledgeGraph parameters)
            {
                return operations.CreateAsync(resourceGroupName, resourceName, parameters).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Creates a EnterpriseKnowledgeGraph Service. EnterpriseKnowledgeGraph
            /// Service is a resource group wide resource type.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the EnterpriseKnowledgeGraph resource group in the user
            /// subscription.
            /// </param>
            /// <param name='resourceName'>
            /// The name of the EnterpriseKnowledgeGraph resource.
            /// </param>
            /// <param name='parameters'>
            /// The parameters to provide for the created EnterpriseKnowledgeGraph.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<EnterpriseKnowledgeGraph> CreateAsync(this IEnterpriseKnowledgeGraphOperations operations, string resourceGroupName, string resourceName, EnterpriseKnowledgeGraph parameters, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.CreateWithHttpMessagesAsync(resourceGroupName, resourceName, parameters, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Updates a EnterpriseKnowledgeGraph Service
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the EnterpriseKnowledgeGraph resource group in the user
            /// subscription.
            /// </param>
            /// <param name='resourceName'>
            /// The name of the EnterpriseKnowledgeGraph resource.
            /// </param>
            /// <param name='location'>
            /// Specifies the location of the resource.
            /// </param>
            /// <param name='tags'>
            /// Contains resource tags defined as key/value pairs.
            /// </param>
            /// <param name='sku'>
            /// Gets or sets the SKU of the resource.
            /// </param>
            /// <param name='properties'>
            /// The set of properties specific to EnterpriseKnowledgeGraph resource
            /// </param>
            public static EnterpriseKnowledgeGraph Update(this IEnterpriseKnowledgeGraphOperations operations, string resourceGroupName, string resourceName, string location = default(string), IDictionary<string, string> tags = default(IDictionary<string, string>), Sku sku = default(Sku), EnterpriseKnowledgeGraphProperties properties = default(EnterpriseKnowledgeGraphProperties))
            {
                return operations.UpdateAsync(resourceGroupName, resourceName, location, tags, sku, properties).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Updates a EnterpriseKnowledgeGraph Service
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the EnterpriseKnowledgeGraph resource group in the user
            /// subscription.
            /// </param>
            /// <param name='resourceName'>
            /// The name of the EnterpriseKnowledgeGraph resource.
            /// </param>
            /// <param name='location'>
            /// Specifies the location of the resource.
            /// </param>
            /// <param name='tags'>
            /// Contains resource tags defined as key/value pairs.
            /// </param>
            /// <param name='sku'>
            /// Gets or sets the SKU of the resource.
            /// </param>
            /// <param name='properties'>
            /// The set of properties specific to EnterpriseKnowledgeGraph resource
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<EnterpriseKnowledgeGraph> UpdateAsync(this IEnterpriseKnowledgeGraphOperations operations, string resourceGroupName, string resourceName, string location = default(string), IDictionary<string, string> tags = default(IDictionary<string, string>), Sku sku = default(Sku), EnterpriseKnowledgeGraphProperties properties = default(EnterpriseKnowledgeGraphProperties), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.UpdateWithHttpMessagesAsync(resourceGroupName, resourceName, location, tags, sku, properties, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Deletes a EnterpriseKnowledgeGraph Service from the resource group.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the EnterpriseKnowledgeGraph resource group in the user
            /// subscription.
            /// </param>
            /// <param name='resourceName'>
            /// The name of the EnterpriseKnowledgeGraph resource.
            /// </param>
            public static void Delete(this IEnterpriseKnowledgeGraphOperations operations, string resourceGroupName, string resourceName)
            {
                operations.DeleteAsync(resourceGroupName, resourceName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Deletes a EnterpriseKnowledgeGraph Service from the resource group.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the EnterpriseKnowledgeGraph resource group in the user
            /// subscription.
            /// </param>
            /// <param name='resourceName'>
            /// The name of the EnterpriseKnowledgeGraph resource.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task DeleteAsync(this IEnterpriseKnowledgeGraphOperations operations, string resourceGroupName, string resourceName, CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.DeleteWithHttpMessagesAsync(resourceGroupName, resourceName, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <summary>
            /// Returns a EnterpriseKnowledgeGraph service specified by the parameters.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the EnterpriseKnowledgeGraph resource group in the user
            /// subscription.
            /// </param>
            /// <param name='resourceName'>
            /// The name of the EnterpriseKnowledgeGraph resource.
            /// </param>
            public static EnterpriseKnowledgeGraph Get(this IEnterpriseKnowledgeGraphOperations operations, string resourceGroupName, string resourceName)
            {
                return operations.GetAsync(resourceGroupName, resourceName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Returns a EnterpriseKnowledgeGraph service specified by the parameters.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the EnterpriseKnowledgeGraph resource group in the user
            /// subscription.
            /// </param>
            /// <param name='resourceName'>
            /// The name of the EnterpriseKnowledgeGraph resource.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<EnterpriseKnowledgeGraph> GetAsync(this IEnterpriseKnowledgeGraphOperations operations, string resourceGroupName, string resourceName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetWithHttpMessagesAsync(resourceGroupName, resourceName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Returns all the resources of a particular type belonging to a resource
            /// group
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the EnterpriseKnowledgeGraph resource group in the user
            /// subscription.
            /// </param>
            public static IPage<EnterpriseKnowledgeGraph> ListByResourceGroup(this IEnterpriseKnowledgeGraphOperations operations, string resourceGroupName)
            {
                return operations.ListByResourceGroupAsync(resourceGroupName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Returns all the resources of a particular type belonging to a resource
            /// group
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the EnterpriseKnowledgeGraph resource group in the user
            /// subscription.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<EnterpriseKnowledgeGraph>> ListByResourceGroupAsync(this IEnterpriseKnowledgeGraphOperations operations, string resourceGroupName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListByResourceGroupWithHttpMessagesAsync(resourceGroupName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Returns all the resources of a particular type belonging to a subscription.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            public static IPage<EnterpriseKnowledgeGraph> List(this IEnterpriseKnowledgeGraphOperations operations)
            {
                return operations.ListAsync().GetAwaiter().GetResult();
            }

            /// <summary>
            /// Returns all the resources of a particular type belonging to a subscription.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<EnterpriseKnowledgeGraph>> ListAsync(this IEnterpriseKnowledgeGraphOperations operations, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListWithHttpMessagesAsync(null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Returns all the resources of a particular type belonging to a resource
            /// group
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            public static IPage<EnterpriseKnowledgeGraph> ListByResourceGroupNext(this IEnterpriseKnowledgeGraphOperations operations, string nextPageLink)
            {
                return operations.ListByResourceGroupNextAsync(nextPageLink).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Returns all the resources of a particular type belonging to a resource
            /// group
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<EnterpriseKnowledgeGraph>> ListByResourceGroupNextAsync(this IEnterpriseKnowledgeGraphOperations operations, string nextPageLink, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListByResourceGroupNextWithHttpMessagesAsync(nextPageLink, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Returns all the resources of a particular type belonging to a subscription.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            public static IPage<EnterpriseKnowledgeGraph> ListNext(this IEnterpriseKnowledgeGraphOperations operations, string nextPageLink)
            {
                return operations.ListNextAsync(nextPageLink).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Returns all the resources of a particular type belonging to a subscription.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<EnterpriseKnowledgeGraph>> ListNextAsync(this IEnterpriseKnowledgeGraphOperations operations, string nextPageLink, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListNextWithHttpMessagesAsync(nextPageLink, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
