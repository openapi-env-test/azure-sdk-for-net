// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.Iothub.Models
{
    public partial class RoutingCosmosDBSqlApiProperties : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            writer.WritePropertyName("name");
            writer.WriteStringValue(Name);
            if (Optional.IsDefined(Id))
            {
                writer.WritePropertyName("id");
                writer.WriteStringValue(Id);
            }
            if (Optional.IsDefined(SubscriptionId))
            {
                writer.WritePropertyName("subscriptionId");
                writer.WriteStringValue(SubscriptionId);
            }
            if (Optional.IsDefined(ResourceGroup))
            {
                writer.WritePropertyName("resourceGroup");
                writer.WriteStringValue(ResourceGroup);
            }
            writer.WritePropertyName("endpointUri");
            writer.WriteStringValue(EndpointUri.AbsoluteUri);
            if (Optional.IsDefined(AuthenticationType))
            {
                writer.WritePropertyName("authenticationType");
                writer.WriteStringValue(AuthenticationType.Value.ToString());
            }
            if (Optional.IsDefined(Identity))
            {
                writer.WritePropertyName("identity");
                writer.WriteObjectValue(Identity);
            }
            if (Optional.IsDefined(PrimaryKey))
            {
                writer.WritePropertyName("primaryKey");
                writer.WriteStringValue(PrimaryKey);
            }
            if (Optional.IsDefined(SecondaryKey))
            {
                writer.WritePropertyName("secondaryKey");
                writer.WriteStringValue(SecondaryKey);
            }
            writer.WritePropertyName("databaseName");
            writer.WriteStringValue(DatabaseName);
            writer.WritePropertyName("collectionName");
            writer.WriteStringValue(CollectionName);
            if (Optional.IsDefined(PartitionKeyName))
            {
                writer.WritePropertyName("partitionKeyName");
                writer.WriteStringValue(PartitionKeyName);
            }
            if (Optional.IsDefined(PartitionKeyTemplate))
            {
                writer.WritePropertyName("partitionKeyTemplate");
                writer.WriteStringValue(PartitionKeyTemplate);
            }
            writer.WriteEndObject();
        }

        internal static RoutingCosmosDBSqlApiProperties DeserializeRoutingCosmosDBSqlApiProperties(JsonElement element)
        {
            string name = default;
            Optional<string> id = default;
            Optional<string> subscriptionId = default;
            Optional<string> resourceGroup = default;
            Uri endpointUri = default;
            Optional<AuthenticationType> authenticationType = default;
            Optional<ManagedIdentity> identity = default;
            Optional<string> primaryKey = default;
            Optional<string> secondaryKey = default;
            string databaseName = default;
            string collectionName = default;
            Optional<string> partitionKeyName = default;
            Optional<string> partitionKeyTemplate = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("name"))
                {
                    name = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("id"))
                {
                    id = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("subscriptionId"))
                {
                    subscriptionId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("resourceGroup"))
                {
                    resourceGroup = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("endpointUri"))
                {
                    endpointUri = new Uri(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("authenticationType"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    authenticationType = new AuthenticationType(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("identity"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    identity = ManagedIdentity.DeserializeManagedIdentity(property.Value);
                    continue;
                }
                if (property.NameEquals("primaryKey"))
                {
                    primaryKey = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("secondaryKey"))
                {
                    secondaryKey = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("databaseName"))
                {
                    databaseName = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("collectionName"))
                {
                    collectionName = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("partitionKeyName"))
                {
                    partitionKeyName = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("partitionKeyTemplate"))
                {
                    partitionKeyTemplate = property.Value.GetString();
                    continue;
                }
            }
            return new RoutingCosmosDBSqlApiProperties(name, id.Value, subscriptionId.Value, resourceGroup.Value, endpointUri, Optional.ToNullable(authenticationType), identity.Value, primaryKey.Value, secondaryKey.Value, databaseName, collectionName, partitionKeyName.Value, partitionKeyTemplate.Value);
        }
    }
}
