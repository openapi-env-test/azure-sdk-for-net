// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Contoso.Management.SecurityInsights.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Grouping configuration property bag.
    /// </summary>
    public partial class GroupingConfiguration
    {
        /// <summary>
        /// Initializes a new instance of the GroupingConfiguration class.
        /// </summary>
        public GroupingConfiguration()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the GroupingConfiguration class.
        /// </summary>
        /// <param name="enabled">Grouping enabled</param>
        /// <param name="reopenClosedIncident">Re-open closed matching
        /// incidents</param>
        /// <param name="lookbackDuration">Limit the group to alerts created
        /// within the lookback duration (in ISO 8601 duration format)</param>
        /// <param name="entitiesMatchingMethod">Grouping matching method.
        /// Possible values include: 'All', 'None', 'Custom'</param>
        /// <param name="groupByEntities">A list of entity types to group by
        /// (when entitiesMatchingMethod is Custom)</param>
        public GroupingConfiguration(bool enabled, bool reopenClosedIncident, System.TimeSpan lookbackDuration, string entitiesMatchingMethod, IList<string> groupByEntities = default(IList<string>))
        {
            Enabled = enabled;
            ReopenClosedIncident = reopenClosedIncident;
            LookbackDuration = lookbackDuration;
            EntitiesMatchingMethod = entitiesMatchingMethod;
            GroupByEntities = groupByEntities;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets grouping enabled
        /// </summary>
        [JsonProperty(PropertyName = "enabled")]
        public bool Enabled { get; set; }

        /// <summary>
        /// Gets or sets re-open closed matching incidents
        /// </summary>
        [JsonProperty(PropertyName = "reopenClosedIncident")]
        public bool ReopenClosedIncident { get; set; }

        /// <summary>
        /// Gets or sets limit the group to alerts created within the lookback
        /// duration (in ISO 8601 duration format)
        /// </summary>
        [JsonProperty(PropertyName = "lookbackDuration")]
        public System.TimeSpan LookbackDuration { get; set; }

        /// <summary>
        /// Gets or sets grouping matching method. Possible values include:
        /// 'All', 'None', 'Custom'
        /// </summary>
        [JsonProperty(PropertyName = "entitiesMatchingMethod")]
        public string EntitiesMatchingMethod { get; set; }

        /// <summary>
        /// Gets or sets a list of entity types to group by (when
        /// entitiesMatchingMethod is Custom)
        /// </summary>
        [JsonProperty(PropertyName = "groupByEntities")]
        public IList<string> GroupByEntities { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (EntitiesMatchingMethod == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "EntitiesMatchingMethod");
            }
        }
    }
}
