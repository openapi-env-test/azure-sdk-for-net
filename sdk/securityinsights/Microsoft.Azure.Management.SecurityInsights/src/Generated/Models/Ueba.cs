// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Contoso.Management.SecurityInsights.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Settings with single toggle.
    /// </summary>
    [Newtonsoft.Json.JsonObject("Ueba")]
    [Rest.Serialization.JsonTransformation]
    public partial class Ueba : Settings
    {
        /// <summary>
        /// Initializes a new instance of the Ueba class.
        /// </summary>
        public Ueba()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Ueba class.
        /// </summary>
        /// <param name="id">Azure resource Id</param>
        /// <param name="name">Azure resource name</param>
        /// <param name="type">Azure resource type</param>
        /// <param name="etag">Etag of the azure resource</param>
        /// <param name="dataSources">The relevant data sources that enriched
        /// by ueba</param>
        public Ueba(string id = default(string), string name = default(string), string type = default(string), string etag = default(string), IList<string> dataSources = default(IList<string>))
            : base(id, name, type, etag)
        {
            DataSources = dataSources;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the relevant data sources that enriched by ueba
        /// </summary>
        [JsonProperty(PropertyName = "properties.dataSources")]
        public IList<string> DataSources { get; set; }

    }
}
