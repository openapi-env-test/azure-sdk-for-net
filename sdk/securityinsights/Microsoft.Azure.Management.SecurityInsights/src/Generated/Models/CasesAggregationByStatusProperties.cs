// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Contoso.Management.SecurityInsights.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Aggregative results of cases by status property bag.
    /// </summary>
    public partial class CasesAggregationByStatusProperties
    {
        /// <summary>
        /// Initializes a new instance of the
        /// CasesAggregationByStatusProperties class.
        /// </summary>
        public CasesAggregationByStatusProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// CasesAggregationByStatusProperties class.
        /// </summary>
        /// <param name="totalDismissedStatus">Total amount of closed cases
        /// with status Dismissed</param>
        /// <param name="totalInProgressStatus">Total amount of open cases with
        /// status InProgress</param>
        /// <param name="totalNewStatus">Total amount of open cases with status
        /// New</param>
        /// <param name="totalResolvedStatus">Total amount of closed cases with
        /// status Resolved</param>
        /// <param name="totalFalsePositiveStatus">Total amount of closed cases
        /// with status Closed and Close reason of False positive</param>
        /// <param name="totalTruePositiveStatus">Total amount of closed cases
        /// with status Closed and Close reason of True positive</param>
        public CasesAggregationByStatusProperties(int? totalDismissedStatus = default(int?), int? totalInProgressStatus = default(int?), int? totalNewStatus = default(int?), int? totalResolvedStatus = default(int?), int? totalFalsePositiveStatus = default(int?), int? totalTruePositiveStatus = default(int?))
        {
            TotalDismissedStatus = totalDismissedStatus;
            TotalInProgressStatus = totalInProgressStatus;
            TotalNewStatus = totalNewStatus;
            TotalResolvedStatus = totalResolvedStatus;
            TotalFalsePositiveStatus = totalFalsePositiveStatus;
            TotalTruePositiveStatus = totalTruePositiveStatus;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets total amount of closed cases with status Dismissed
        /// </summary>
        [JsonProperty(PropertyName = "totalDismissedStatus")]
        public int? TotalDismissedStatus { get; private set; }

        /// <summary>
        /// Gets total amount of open cases with status InProgress
        /// </summary>
        [JsonProperty(PropertyName = "totalInProgressStatus")]
        public int? TotalInProgressStatus { get; private set; }

        /// <summary>
        /// Gets total amount of open cases with status New
        /// </summary>
        [JsonProperty(PropertyName = "totalNewStatus")]
        public int? TotalNewStatus { get; private set; }

        /// <summary>
        /// Gets total amount of closed cases with status Resolved
        /// </summary>
        [JsonProperty(PropertyName = "totalResolvedStatus")]
        public int? TotalResolvedStatus { get; private set; }

        /// <summary>
        /// Gets total amount of closed cases with status Closed and Close
        /// reason of False positive
        /// </summary>
        [JsonProperty(PropertyName = "totalFalsePositiveStatus")]
        public int? TotalFalsePositiveStatus { get; private set; }

        /// <summary>
        /// Gets total amount of closed cases with status Closed and Close
        /// reason of True positive
        /// </summary>
        [JsonProperty(PropertyName = "totalTruePositiveStatus")]
        public int? TotalTruePositiveStatus { get; private set; }

    }
}
