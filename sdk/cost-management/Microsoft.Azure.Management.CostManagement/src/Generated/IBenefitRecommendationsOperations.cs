// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.CostManagement
{
    using Microsoft.Rest;
    using Microsoft.Rest.Azure;
    using Models;
    using System.Collections;
    using System.Collections.Generic;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// BenefitRecommendationsOperations operations.
    /// </summary>
    public partial interface IBenefitRecommendationsOperations
    {
        /// <summary>
        /// List of recommendations for purchasing savings plan.
        /// <see href="https://docs.microsoft.com/en-us/rest/api/CostManagement/" />
        /// </summary>
        /// <param name='billingScope'>
        /// The scope associated with benefit recommendation operations. This
        /// includes '/subscriptions/{subscriptionId}/' for subscription scope,
        /// '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}'
        /// for resource group scope,
        /// /providers/Microsoft.Billing/billingAccounts/{billingAccountId}'
        /// for enterprise agreement scope, and
        /// '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}'
        /// for billing profile scope
        /// </param>
        /// <param name='filter'>
        /// Can be used to filter benefitRecommendations by: properties/scope
        /// with allowed values ['Single', 'Shared'] and default value
        /// 'Shared'; and properties/lookBackPeriod with allowed values
        /// ['Last7Days', 'Last30Days', 'Last60Days'] and default value
        /// 'Last60Days'; properties/term with allowed values ['P1Y', 'P3Y']
        /// and default value 'P3Y'; properties/subscriptionId;
        /// properties/resourceGroup
        /// </param>
        /// <param name='orderby'>
        /// May be used to order the recommendations by: properties/armSkuName.
        /// For the savings plan, the results are in order by default. There is
        /// no need to use this clause.
        /// </param>
        /// <param name='expand'>
        /// May be used to expand the properties by: properties/usage,
        /// properties/allRecommendationDetails
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorResponseException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<AzureOperationResponse<IPage<BenefitRecommendationModel>>> ListWithHttpMessagesAsync(string billingScope, string filter = default(string), string orderby = default(string), string expand = default(string), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// List of recommendations for purchasing savings plan.
        /// <see href="https://docs.microsoft.com/en-us/rest/api/CostManagement/" />
        /// </summary>
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorResponseException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<AzureOperationResponse<IPage<BenefitRecommendationModel>>> ListNextWithHttpMessagesAsync(string nextPageLink, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
    }
}
