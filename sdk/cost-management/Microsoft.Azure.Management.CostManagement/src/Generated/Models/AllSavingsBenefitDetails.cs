// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.CostManagement.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Benefit recommendation details.
    /// </summary>
    public partial class AllSavingsBenefitDetails
    {
        /// <summary>
        /// Initializes a new instance of the AllSavingsBenefitDetails class.
        /// </summary>
        public AllSavingsBenefitDetails()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the AllSavingsBenefitDetails class.
        /// </summary>
        /// <param name="overageCost">The difference between total cost and
        /// benefit cost for the 'totalHours' in the look-back period.</param>
        /// <param name="benefitCost">The estimated cost with benefit for the
        /// 'totalHours' in the look-back period. It's equal to
        /// (commitmentAmount * totalHours)</param>
        /// <param name="totalCost">Total cost, which is sum of benefit cost
        /// and overage cost.</param>
        /// <param name="savingsAmount">The amount saved for the 'totalHours'
        /// in the look-back period, by purchasing the recommended quantity of
        /// the benefit.</param>
        /// <param name="savingsPercentage">The savings in percentage for the
        /// 'totalHours' in the look-back period, by purchasing the recommended
        /// quantity of benefit.</param>
        /// <param name="coveragePercentage">Estimated benefit coverage
        /// percentage for the 'totalHours' in the look-back period, with this
        /// commitment.</param>
        /// <param name="commitmentAmount">The commitment amount at the
        /// commitmentGranularity.</param>
        /// <param name="averageUtilizationPercentage">Estimated average
        /// utilization percentage for the 'totalHours' in the look-back
        /// period, with this commitment.</param>
        /// <param name="wastageCost">Estimated unused portion of the
        /// 'benefitCost'.</param>
        public AllSavingsBenefitDetails(decimal? overageCost = default(decimal?), decimal? benefitCost = default(decimal?), decimal? totalCost = default(decimal?), decimal? savingsAmount = default(decimal?), decimal? savingsPercentage = default(decimal?), decimal? coveragePercentage = default(decimal?), decimal? commitmentAmount = default(decimal?), decimal? averageUtilizationPercentage = default(decimal?), decimal? wastageCost = default(decimal?))
        {
            OverageCost = overageCost;
            BenefitCost = benefitCost;
            TotalCost = totalCost;
            SavingsAmount = savingsAmount;
            SavingsPercentage = savingsPercentage;
            CoveragePercentage = coveragePercentage;
            CommitmentAmount = commitmentAmount;
            AverageUtilizationPercentage = averageUtilizationPercentage;
            WastageCost = wastageCost;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets the difference between total cost and benefit cost for the
        /// 'totalHours' in the look-back period.
        /// </summary>
        [JsonProperty(PropertyName = "overageCost")]
        public decimal? OverageCost { get; private set; }

        /// <summary>
        /// Gets the estimated cost with benefit for the 'totalHours' in the
        /// look-back period. It's equal to (commitmentAmount * totalHours)
        /// </summary>
        [JsonProperty(PropertyName = "benefitCost")]
        public decimal? BenefitCost { get; private set; }

        /// <summary>
        /// Gets total cost, which is sum of benefit cost and overage cost.
        /// </summary>
        [JsonProperty(PropertyName = "totalCost")]
        public decimal? TotalCost { get; private set; }

        /// <summary>
        /// Gets the amount saved for the 'totalHours' in the look-back period,
        /// by purchasing the recommended quantity of the benefit.
        /// </summary>
        [JsonProperty(PropertyName = "savingsAmount")]
        public decimal? SavingsAmount { get; private set; }

        /// <summary>
        /// Gets the savings in percentage for the 'totalHours' in the
        /// look-back period, by purchasing the recommended quantity of
        /// benefit.
        /// </summary>
        [JsonProperty(PropertyName = "savingsPercentage")]
        public decimal? SavingsPercentage { get; private set; }

        /// <summary>
        /// Gets estimated benefit coverage percentage for the 'totalHours' in
        /// the look-back period, with this commitment.
        /// </summary>
        [JsonProperty(PropertyName = "coveragePercentage")]
        public decimal? CoveragePercentage { get; private set; }

        /// <summary>
        /// Gets the commitment amount at the commitmentGranularity.
        /// </summary>
        [JsonProperty(PropertyName = "commitmentAmount")]
        public decimal? CommitmentAmount { get; private set; }

        /// <summary>
        /// Gets estimated average utilization percentage for the 'totalHours'
        /// in the look-back period, with this commitment.
        /// </summary>
        [JsonProperty(PropertyName = "averageUtilizationPercentage")]
        public decimal? AverageUtilizationPercentage { get; private set; }

        /// <summary>
        /// Gets estimated unused portion of the 'benefitCost'.
        /// </summary>
        [JsonProperty(PropertyName = "wastageCost")]
        public decimal? WastageCost { get; private set; }

    }
}
