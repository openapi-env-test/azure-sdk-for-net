// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.CostManagement
{
    using Microsoft.Rest;
    using Microsoft.Rest.Azure;
    using Models;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for BenefitRecommendationsOperations.
    /// </summary>
    public static partial class BenefitRecommendationsOperationsExtensions
    {
            /// <summary>
            /// List of recommendations for purchasing savings plan.
            /// <see href="https://docs.microsoft.com/en-us/rest/api/CostManagement/" />
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='billingScope'>
            /// The scope associated with benefit recommendation operations. This includes
            /// '/subscriptions/{subscriptionId}/' for subscription scope,
            /// '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for
            /// resource group scope,
            /// /providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for
            /// enterprise agreement scope, and
            /// '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}'
            /// for billing profile scope
            /// </param>
            /// <param name='filter'>
            /// Can be used to filter benefitRecommendations by: properties/scope with
            /// allowed values ['Single', 'Shared'] and default value 'Shared'; and
            /// properties/lookBackPeriod with allowed values ['Last7Days', 'Last30Days',
            /// 'Last60Days'] and default value 'Last60Days'; properties/term with allowed
            /// values ['P1Y', 'P3Y'] and default value 'P3Y'; properties/subscriptionId;
            /// properties/resourceGroup
            /// </param>
            /// <param name='orderby'>
            /// May be used to order the recommendations by: properties/armSkuName. For the
            /// savings plan, the results are in order by default. There is no need to use
            /// this clause.
            /// </param>
            /// <param name='expand'>
            /// May be used to expand the properties by: properties/usage,
            /// properties/allRecommendationDetails
            /// </param>
            public static IPage<BenefitRecommendationModel> List(this IBenefitRecommendationsOperations operations, string billingScope, string filter = default(string), string orderby = default(string), string expand = default(string))
            {
                return operations.ListAsync(billingScope, filter, orderby, expand).GetAwaiter().GetResult();
            }

            /// <summary>
            /// List of recommendations for purchasing savings plan.
            /// <see href="https://docs.microsoft.com/en-us/rest/api/CostManagement/" />
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='billingScope'>
            /// The scope associated with benefit recommendation operations. This includes
            /// '/subscriptions/{subscriptionId}/' for subscription scope,
            /// '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for
            /// resource group scope,
            /// /providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for
            /// enterprise agreement scope, and
            /// '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}'
            /// for billing profile scope
            /// </param>
            /// <param name='filter'>
            /// Can be used to filter benefitRecommendations by: properties/scope with
            /// allowed values ['Single', 'Shared'] and default value 'Shared'; and
            /// properties/lookBackPeriod with allowed values ['Last7Days', 'Last30Days',
            /// 'Last60Days'] and default value 'Last60Days'; properties/term with allowed
            /// values ['P1Y', 'P3Y'] and default value 'P3Y'; properties/subscriptionId;
            /// properties/resourceGroup
            /// </param>
            /// <param name='orderby'>
            /// May be used to order the recommendations by: properties/armSkuName. For the
            /// savings plan, the results are in order by default. There is no need to use
            /// this clause.
            /// </param>
            /// <param name='expand'>
            /// May be used to expand the properties by: properties/usage,
            /// properties/allRecommendationDetails
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<BenefitRecommendationModel>> ListAsync(this IBenefitRecommendationsOperations operations, string billingScope, string filter = default(string), string orderby = default(string), string expand = default(string), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListWithHttpMessagesAsync(billingScope, filter, orderby, expand, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// List of recommendations for purchasing savings plan.
            /// <see href="https://docs.microsoft.com/en-us/rest/api/CostManagement/" />
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            public static IPage<BenefitRecommendationModel> ListNext(this IBenefitRecommendationsOperations operations, string nextPageLink)
            {
                return operations.ListNextAsync(nextPageLink).GetAwaiter().GetResult();
            }

            /// <summary>
            /// List of recommendations for purchasing savings plan.
            /// <see href="https://docs.microsoft.com/en-us/rest/api/CostManagement/" />
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<BenefitRecommendationModel>> ListNextAsync(this IBenefitRecommendationsOperations operations, string nextPageLink, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListNextWithHttpMessagesAsync(nextPageLink, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
