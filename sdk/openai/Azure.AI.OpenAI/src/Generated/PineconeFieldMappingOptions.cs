// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;
using Azure.Core;

namespace Azure.AI.OpenAI
{
    /// <summary> Optional settings to control how fields are processed when using a configured Pinecone resource. </summary>
    public partial class PineconeFieldMappingOptions
    {
        /// <summary> Initializes a new instance of <see cref="PineconeFieldMappingOptions"/>. </summary>
        /// <param name="contentFieldNames"> The names of index fields that should be treated as content. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="contentFieldNames"/> is null. </exception>
        public PineconeFieldMappingOptions(IEnumerable<string> contentFieldNames)
        {
            Argument.AssertNotNull(contentFieldNames, nameof(contentFieldNames));

            ContentFieldNames = contentFieldNames.ToList();
        }

        /// <summary> Initializes a new instance of <see cref="PineconeFieldMappingOptions"/>. </summary>
        /// <param name="titleFieldName"> The name of the index field to use as a title. </param>
        /// <param name="urlFieldName"> The name of the index field to use as a URL. </param>
        /// <param name="filepathFieldName"> The name of the index field to use as a filepath. </param>
        /// <param name="contentFieldNames"> The names of index fields that should be treated as content. </param>
        /// <param name="contentFieldSeparator"> The separator pattern that content fields should use. </param>
        internal PineconeFieldMappingOptions(string titleFieldName, string urlFieldName, string filepathFieldName, IList<string> contentFieldNames, string contentFieldSeparator)
        {
            TitleFieldName = titleFieldName;
            UrlFieldName = urlFieldName;
            FilepathFieldName = filepathFieldName;
            ContentFieldNames = contentFieldNames;
            ContentFieldSeparator = contentFieldSeparator;
        }

        /// <summary> The name of the index field to use as a title. </summary>
        public string TitleFieldName { get; set; }
        /// <summary> The name of the index field to use as a URL. </summary>
        public string UrlFieldName { get; set; }
        /// <summary> The name of the index field to use as a filepath. </summary>
        public string FilepathFieldName { get; set; }
        /// <summary> The names of index fields that should be treated as content. </summary>
        public IList<string> ContentFieldNames { get; }
        /// <summary> The separator pattern that content fields should use. </summary>
        public string ContentFieldSeparator { get; set; }
    }
}
