<?xml version="1.0" encoding="utf-8"?>
<doc>
  <members>
    <member name="GetMetadataRolesAsync(RequestContext)">
<example>
This sample shows how to call GetMetadataRolesAsync and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new MetadataRolesClient("<https://my-service.azure.com>", credential);

await foreach (var data in client.GetMetadataRolesAsync())
{
    JsonElement result = JsonDocument.Parse(data.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("type").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("provisioningState").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("roleType").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("friendlyName").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("description").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("cnfCondition")[0][0].GetProperty("attributeName").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("cnfCondition")[0][0].GetProperty("attributeValueIncludes").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("cnfCondition")[0][0].GetProperty("attributeValueIncludedIn")[0].ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("cnfCondition")[0][0].GetProperty("attributeValueExcludes").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("cnfCondition")[0][0].GetProperty("attributeValueExcludedIn")[0].ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("dnfCondition")[0][0].GetProperty("attributeName").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("dnfCondition")[0][0].GetProperty("attributeValueIncludes").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("dnfCondition")[0][0].GetProperty("attributeValueIncludedIn")[0].ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("dnfCondition")[0][0].GetProperty("attributeValueExcludes").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("dnfCondition")[0][0].GetProperty("attributeValueExcludedIn")[0].ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("version").ToString());
}
]]></code>
</example>
<remarks>
Below is the JSON schema for one item in the pageable response.

Response Body:

Schema for <c>MetadataRoleListValues</c>:
<code>{
  id: string, # Optional. The Id of role
  name: string, # Optional. The name of role
  type: string, # Optional. The type of role
  properties: {
    provisioningState: string, # Optional. The provisioningState of role
    roleType: string, # Optional. The type of role
    friendlyName: string, # Optional. The friendly name of role
    description: string, # Optional. The description of role
    cnfCondition: [AttributeMatcher[]], # Optional. The cnf Condition for a rule
    dnfCondition: [AttributeMatcher[]], # Optional. The dnf Condition for a rule
    version: number, # Optional. The version of role
  }, # Optional.
}
</code>

</remarks>
    </member>
    <member name="GetMetadataRoles(RequestContext)">
<example>
This sample shows how to call GetMetadataRoles and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new MetadataRolesClient("<https://my-service.azure.com>", credential);

foreach (var data in client.GetMetadataRoles())
{
    JsonElement result = JsonDocument.Parse(data.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("type").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("provisioningState").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("roleType").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("friendlyName").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("description").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("cnfCondition")[0][0].GetProperty("attributeName").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("cnfCondition")[0][0].GetProperty("attributeValueIncludes").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("cnfCondition")[0][0].GetProperty("attributeValueIncludedIn")[0].ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("cnfCondition")[0][0].GetProperty("attributeValueExcludes").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("cnfCondition")[0][0].GetProperty("attributeValueExcludedIn")[0].ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("dnfCondition")[0][0].GetProperty("attributeName").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("dnfCondition")[0][0].GetProperty("attributeValueIncludes").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("dnfCondition")[0][0].GetProperty("attributeValueIncludedIn")[0].ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("dnfCondition")[0][0].GetProperty("attributeValueExcludes").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("dnfCondition")[0][0].GetProperty("attributeValueExcludedIn")[0].ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("version").ToString());
}
]]></code>
</example>
<remarks>
Below is the JSON schema for one item in the pageable response.

Response Body:

Schema for <c>MetadataRoleListValues</c>:
<code>{
  id: string, # Optional. The Id of role
  name: string, # Optional. The name of role
  type: string, # Optional. The type of role
  properties: {
    provisioningState: string, # Optional. The provisioningState of role
    roleType: string, # Optional. The type of role
    friendlyName: string, # Optional. The friendly name of role
    description: string, # Optional. The description of role
    cnfCondition: [AttributeMatcher[]], # Optional. The cnf Condition for a rule
    dnfCondition: [AttributeMatcher[]], # Optional. The dnf Condition for a rule
    version: number, # Optional. The version of role
  }, # Optional.
}
</code>

</remarks>
    </member>
  </members>
</doc>