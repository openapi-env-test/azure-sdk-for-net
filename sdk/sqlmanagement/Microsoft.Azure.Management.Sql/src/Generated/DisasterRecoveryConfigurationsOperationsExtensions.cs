// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Sql
{
    using Microsoft.Rest;
    using Microsoft.Rest.Azure;
    using Models;
    using System.Collections;
    using System.Collections.Generic;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for DisasterRecoveryConfigurationsOperations.
    /// </summary>
    public static partial class DisasterRecoveryConfigurationsOperationsExtensions
    {
            /// <summary>
            /// Lists a server's disaster recovery configuration.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group that contains the resource. You can obtain
            /// this value from the Azure Resource Manager API or the portal.
            /// </param>
            /// <param name='serverName'>
            /// The name of the server.
            /// </param>
            public static IEnumerable<DisasterRecoveryConfiguration> List(this IDisasterRecoveryConfigurationsOperations operations, string resourceGroupName, string serverName)
            {
                return operations.ListAsync(resourceGroupName, serverName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Lists a server's disaster recovery configuration.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group that contains the resource. You can obtain
            /// this value from the Azure Resource Manager API or the portal.
            /// </param>
            /// <param name='serverName'>
            /// The name of the server.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IEnumerable<DisasterRecoveryConfiguration>> ListAsync(this IDisasterRecoveryConfigurationsOperations operations, string resourceGroupName, string serverName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListWithHttpMessagesAsync(resourceGroupName, serverName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Deletes a disaster recovery configuration.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group that contains the resource. You can obtain
            /// this value from the Azure Resource Manager API or the portal.
            /// </param>
            /// <param name='serverName'>
            /// The name of the server.
            /// </param>
            /// <param name='disasterRecoveryConfigurationName'>
            /// The name of the disaster recovery configuration to be deleted.
            /// </param>
            public static void Delete(this IDisasterRecoveryConfigurationsOperations operations, string resourceGroupName, string serverName, string disasterRecoveryConfigurationName)
            {
                operations.DeleteAsync(resourceGroupName, serverName, disasterRecoveryConfigurationName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Deletes a disaster recovery configuration.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group that contains the resource. You can obtain
            /// this value from the Azure Resource Manager API or the portal.
            /// </param>
            /// <param name='serverName'>
            /// The name of the server.
            /// </param>
            /// <param name='disasterRecoveryConfigurationName'>
            /// The name of the disaster recovery configuration to be deleted.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task DeleteAsync(this IDisasterRecoveryConfigurationsOperations operations, string resourceGroupName, string serverName, string disasterRecoveryConfigurationName, CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.DeleteWithHttpMessagesAsync(resourceGroupName, serverName, disasterRecoveryConfigurationName, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <summary>
            /// Creates or updates a disaster recovery configuration.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group that contains the resource. You can obtain
            /// this value from the Azure Resource Manager API or the portal.
            /// </param>
            /// <param name='serverName'>
            /// The name of the server.
            /// </param>
            /// <param name='disasterRecoveryConfigurationName'>
            /// The name of the disaster recovery configuration to be created/updated.
            /// </param>
            public static DisasterRecoveryConfiguration CreateOrUpdate(this IDisasterRecoveryConfigurationsOperations operations, string resourceGroupName, string serverName, string disasterRecoveryConfigurationName)
            {
                return operations.CreateOrUpdateAsync(resourceGroupName, serverName, disasterRecoveryConfigurationName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Creates or updates a disaster recovery configuration.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group that contains the resource. You can obtain
            /// this value from the Azure Resource Manager API or the portal.
            /// </param>
            /// <param name='serverName'>
            /// The name of the server.
            /// </param>
            /// <param name='disasterRecoveryConfigurationName'>
            /// The name of the disaster recovery configuration to be created/updated.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<DisasterRecoveryConfiguration> CreateOrUpdateAsync(this IDisasterRecoveryConfigurationsOperations operations, string resourceGroupName, string serverName, string disasterRecoveryConfigurationName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.CreateOrUpdateWithHttpMessagesAsync(resourceGroupName, serverName, disasterRecoveryConfigurationName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Gets a disaster recovery configuration.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group that contains the resource. You can obtain
            /// this value from the Azure Resource Manager API or the portal.
            /// </param>
            /// <param name='serverName'>
            /// The name of the server.
            /// </param>
            /// <param name='disasterRecoveryConfigurationName'>
            /// The name of the disaster recovery configuration.
            /// </param>
            public static DisasterRecoveryConfiguration Get(this IDisasterRecoveryConfigurationsOperations operations, string resourceGroupName, string serverName, string disasterRecoveryConfigurationName)
            {
                return operations.GetAsync(resourceGroupName, serverName, disasterRecoveryConfigurationName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Gets a disaster recovery configuration.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group that contains the resource. You can obtain
            /// this value from the Azure Resource Manager API or the portal.
            /// </param>
            /// <param name='serverName'>
            /// The name of the server.
            /// </param>
            /// <param name='disasterRecoveryConfigurationName'>
            /// The name of the disaster recovery configuration.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<DisasterRecoveryConfiguration> GetAsync(this IDisasterRecoveryConfigurationsOperations operations, string resourceGroupName, string serverName, string disasterRecoveryConfigurationName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetWithHttpMessagesAsync(resourceGroupName, serverName, disasterRecoveryConfigurationName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Fails over from the current primary server to this server.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group that contains the resource. You can obtain
            /// this value from the Azure Resource Manager API or the portal.
            /// </param>
            /// <param name='serverName'>
            /// The name of the server.
            /// </param>
            /// <param name='disasterRecoveryConfigurationName'>
            /// The name of the disaster recovery configuration to failover.
            /// </param>
            public static void Failover(this IDisasterRecoveryConfigurationsOperations operations, string resourceGroupName, string serverName, string disasterRecoveryConfigurationName)
            {
                operations.FailoverAsync(resourceGroupName, serverName, disasterRecoveryConfigurationName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Fails over from the current primary server to this server.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group that contains the resource. You can obtain
            /// this value from the Azure Resource Manager API or the portal.
            /// </param>
            /// <param name='serverName'>
            /// The name of the server.
            /// </param>
            /// <param name='disasterRecoveryConfigurationName'>
            /// The name of the disaster recovery configuration to failover.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task FailoverAsync(this IDisasterRecoveryConfigurationsOperations operations, string resourceGroupName, string serverName, string disasterRecoveryConfigurationName, CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.FailoverWithHttpMessagesAsync(resourceGroupName, serverName, disasterRecoveryConfigurationName, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <summary>
            /// Fails over from the current primary server to this server. This operation
            /// might result in data loss.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group that contains the resource. You can obtain
            /// this value from the Azure Resource Manager API or the portal.
            /// </param>
            /// <param name='serverName'>
            /// The name of the server.
            /// </param>
            /// <param name='disasterRecoveryConfigurationName'>
            /// The name of the disaster recovery configuration to failover forcefully.
            /// </param>
            public static void FailoverAllowDataLoss(this IDisasterRecoveryConfigurationsOperations operations, string resourceGroupName, string serverName, string disasterRecoveryConfigurationName)
            {
                operations.FailoverAllowDataLossAsync(resourceGroupName, serverName, disasterRecoveryConfigurationName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Fails over from the current primary server to this server. This operation
            /// might result in data loss.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group that contains the resource. You can obtain
            /// this value from the Azure Resource Manager API or the portal.
            /// </param>
            /// <param name='serverName'>
            /// The name of the server.
            /// </param>
            /// <param name='disasterRecoveryConfigurationName'>
            /// The name of the disaster recovery configuration to failover forcefully.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task FailoverAllowDataLossAsync(this IDisasterRecoveryConfigurationsOperations operations, string resourceGroupName, string serverName, string disasterRecoveryConfigurationName, CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.FailoverAllowDataLossWithHttpMessagesAsync(resourceGroupName, serverName, disasterRecoveryConfigurationName, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <summary>
            /// Deletes a disaster recovery configuration.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group that contains the resource. You can obtain
            /// this value from the Azure Resource Manager API or the portal.
            /// </param>
            /// <param name='serverName'>
            /// The name of the server.
            /// </param>
            /// <param name='disasterRecoveryConfigurationName'>
            /// The name of the disaster recovery configuration to be deleted.
            /// </param>
            public static void BeginDelete(this IDisasterRecoveryConfigurationsOperations operations, string resourceGroupName, string serverName, string disasterRecoveryConfigurationName)
            {
                operations.BeginDeleteAsync(resourceGroupName, serverName, disasterRecoveryConfigurationName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Deletes a disaster recovery configuration.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group that contains the resource. You can obtain
            /// this value from the Azure Resource Manager API or the portal.
            /// </param>
            /// <param name='serverName'>
            /// The name of the server.
            /// </param>
            /// <param name='disasterRecoveryConfigurationName'>
            /// The name of the disaster recovery configuration to be deleted.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task BeginDeleteAsync(this IDisasterRecoveryConfigurationsOperations operations, string resourceGroupName, string serverName, string disasterRecoveryConfigurationName, CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.BeginDeleteWithHttpMessagesAsync(resourceGroupName, serverName, disasterRecoveryConfigurationName, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <summary>
            /// Creates or updates a disaster recovery configuration.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group that contains the resource. You can obtain
            /// this value from the Azure Resource Manager API or the portal.
            /// </param>
            /// <param name='serverName'>
            /// The name of the server.
            /// </param>
            /// <param name='disasterRecoveryConfigurationName'>
            /// The name of the disaster recovery configuration to be created/updated.
            /// </param>
            public static DisasterRecoveryConfiguration BeginCreateOrUpdate(this IDisasterRecoveryConfigurationsOperations operations, string resourceGroupName, string serverName, string disasterRecoveryConfigurationName)
            {
                return operations.BeginCreateOrUpdateAsync(resourceGroupName, serverName, disasterRecoveryConfigurationName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Creates or updates a disaster recovery configuration.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group that contains the resource. You can obtain
            /// this value from the Azure Resource Manager API or the portal.
            /// </param>
            /// <param name='serverName'>
            /// The name of the server.
            /// </param>
            /// <param name='disasterRecoveryConfigurationName'>
            /// The name of the disaster recovery configuration to be created/updated.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<DisasterRecoveryConfiguration> BeginCreateOrUpdateAsync(this IDisasterRecoveryConfigurationsOperations operations, string resourceGroupName, string serverName, string disasterRecoveryConfigurationName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.BeginCreateOrUpdateWithHttpMessagesAsync(resourceGroupName, serverName, disasterRecoveryConfigurationName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Fails over from the current primary server to this server.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group that contains the resource. You can obtain
            /// this value from the Azure Resource Manager API or the portal.
            /// </param>
            /// <param name='serverName'>
            /// The name of the server.
            /// </param>
            /// <param name='disasterRecoveryConfigurationName'>
            /// The name of the disaster recovery configuration to failover.
            /// </param>
            public static void BeginFailover(this IDisasterRecoveryConfigurationsOperations operations, string resourceGroupName, string serverName, string disasterRecoveryConfigurationName)
            {
                operations.BeginFailoverAsync(resourceGroupName, serverName, disasterRecoveryConfigurationName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Fails over from the current primary server to this server.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group that contains the resource. You can obtain
            /// this value from the Azure Resource Manager API or the portal.
            /// </param>
            /// <param name='serverName'>
            /// The name of the server.
            /// </param>
            /// <param name='disasterRecoveryConfigurationName'>
            /// The name of the disaster recovery configuration to failover.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task BeginFailoverAsync(this IDisasterRecoveryConfigurationsOperations operations, string resourceGroupName, string serverName, string disasterRecoveryConfigurationName, CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.BeginFailoverWithHttpMessagesAsync(resourceGroupName, serverName, disasterRecoveryConfigurationName, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <summary>
            /// Fails over from the current primary server to this server. This operation
            /// might result in data loss.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group that contains the resource. You can obtain
            /// this value from the Azure Resource Manager API or the portal.
            /// </param>
            /// <param name='serverName'>
            /// The name of the server.
            /// </param>
            /// <param name='disasterRecoveryConfigurationName'>
            /// The name of the disaster recovery configuration to failover forcefully.
            /// </param>
            public static void BeginFailoverAllowDataLoss(this IDisasterRecoveryConfigurationsOperations operations, string resourceGroupName, string serverName, string disasterRecoveryConfigurationName)
            {
                operations.BeginFailoverAllowDataLossAsync(resourceGroupName, serverName, disasterRecoveryConfigurationName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Fails over from the current primary server to this server. This operation
            /// might result in data loss.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group that contains the resource. You can obtain
            /// this value from the Azure Resource Manager API or the portal.
            /// </param>
            /// <param name='serverName'>
            /// The name of the server.
            /// </param>
            /// <param name='disasterRecoveryConfigurationName'>
            /// The name of the disaster recovery configuration to failover forcefully.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task BeginFailoverAllowDataLossAsync(this IDisasterRecoveryConfigurationsOperations operations, string resourceGroupName, string serverName, string disasterRecoveryConfigurationName, CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.BeginFailoverAllowDataLossWithHttpMessagesAsync(resourceGroupName, serverName, disasterRecoveryConfigurationName, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

    }
}
