// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Authorization.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Settings of an Access Review.
    /// </summary>
    public partial class AccessReviewScheduleSettings
    {
        /// <summary>
        /// Initializes a new instance of the AccessReviewScheduleSettings
        /// class.
        /// </summary>
        public AccessReviewScheduleSettings()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the AccessReviewScheduleSettings
        /// class.
        /// </summary>
        /// <param name="mailNotificationsEnabled">Flag to indicate whether
        /// sending mails to reviewers and the review creator is
        /// enabled.</param>
        /// <param name="reminderNotificationsEnabled">Flag to indicate whether
        /// sending reminder emails to reviewers are enabled.</param>
        /// <param name="defaultDecisionEnabled">Flag to indicate whether
        /// reviewers are required to provide a justification when reviewing
        /// access.</param>
        /// <param name="justificationRequiredOnApproval">Flag to indicate
        /// whether the reviewer is required to pass justification when
        /// recording a decision.</param>
        /// <param name="defaultDecision">This specifies the behavior for the
        /// autoReview feature when an access review completes. Possible values
        /// include: 'Approve', 'Deny', 'Recommendation'</param>
        /// <param name="autoApplyDecisionsEnabled">Flag to indicate whether
        /// auto-apply capability, to automatically change the target object
        /// access resource, is enabled. If not enabled, a user must, after the
        /// review completes, apply the access review.</param>
        /// <param name="recommendationsEnabled">Flag to indicate whether
        /// showing recommendations to reviewers is enabled.</param>
        /// <param name="instanceDurationInDays">The duration in days for an
        /// instance.</param>
        /// <param name="recurrence">Access Review Settings.</param>
        public AccessReviewScheduleSettings(bool? mailNotificationsEnabled = default(bool?), bool? reminderNotificationsEnabled = default(bool?), bool? defaultDecisionEnabled = default(bool?), bool? justificationRequiredOnApproval = default(bool?), string defaultDecision = default(string), bool? autoApplyDecisionsEnabled = default(bool?), bool? recommendationsEnabled = default(bool?), int? instanceDurationInDays = default(int?), AccessReviewRecurrenceSettings recurrence = default(AccessReviewRecurrenceSettings))
        {
            MailNotificationsEnabled = mailNotificationsEnabled;
            ReminderNotificationsEnabled = reminderNotificationsEnabled;
            DefaultDecisionEnabled = defaultDecisionEnabled;
            JustificationRequiredOnApproval = justificationRequiredOnApproval;
            DefaultDecision = defaultDecision;
            AutoApplyDecisionsEnabled = autoApplyDecisionsEnabled;
            RecommendationsEnabled = recommendationsEnabled;
            InstanceDurationInDays = instanceDurationInDays;
            Recurrence = recurrence;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets flag to indicate whether sending mails to reviewers
        /// and the review creator is enabled.
        /// </summary>
        [JsonProperty(PropertyName = "mailNotificationsEnabled")]
        public bool? MailNotificationsEnabled { get; set; }

        /// <summary>
        /// Gets or sets flag to indicate whether sending reminder emails to
        /// reviewers are enabled.
        /// </summary>
        [JsonProperty(PropertyName = "reminderNotificationsEnabled")]
        public bool? ReminderNotificationsEnabled { get; set; }

        /// <summary>
        /// Gets or sets flag to indicate whether reviewers are required to
        /// provide a justification when reviewing access.
        /// </summary>
        [JsonProperty(PropertyName = "defaultDecisionEnabled")]
        public bool? DefaultDecisionEnabled { get; set; }

        /// <summary>
        /// Gets or sets flag to indicate whether the reviewer is required to
        /// pass justification when recording a decision.
        /// </summary>
        [JsonProperty(PropertyName = "justificationRequiredOnApproval")]
        public bool? JustificationRequiredOnApproval { get; set; }

        /// <summary>
        /// Gets or sets this specifies the behavior for the autoReview feature
        /// when an access review completes. Possible values include:
        /// 'Approve', 'Deny', 'Recommendation'
        /// </summary>
        [JsonProperty(PropertyName = "defaultDecision")]
        public string DefaultDecision { get; set; }

        /// <summary>
        /// Gets or sets flag to indicate whether auto-apply capability, to
        /// automatically change the target object access resource, is enabled.
        /// If not enabled, a user must, after the review completes, apply the
        /// access review.
        /// </summary>
        [JsonProperty(PropertyName = "autoApplyDecisionsEnabled")]
        public bool? AutoApplyDecisionsEnabled { get; set; }

        /// <summary>
        /// Gets or sets flag to indicate whether showing recommendations to
        /// reviewers is enabled.
        /// </summary>
        [JsonProperty(PropertyName = "recommendationsEnabled")]
        public bool? RecommendationsEnabled { get; set; }

        /// <summary>
        /// Gets or sets the duration in days for an instance.
        /// </summary>
        [JsonProperty(PropertyName = "instanceDurationInDays")]
        public int? InstanceDurationInDays { get; set; }

        /// <summary>
        /// Gets or sets access Review Settings.
        /// </summary>
        [JsonProperty(PropertyName = "recurrence")]
        public AccessReviewRecurrenceSettings Recurrence { get; set; }

    }
}
