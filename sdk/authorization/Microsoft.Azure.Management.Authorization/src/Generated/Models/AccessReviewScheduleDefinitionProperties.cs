// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Authorization.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Access Review.
    /// </summary>
    public partial class AccessReviewScheduleDefinitionProperties
    {
        /// <summary>
        /// Initializes a new instance of the
        /// AccessReviewScheduleDefinitionProperties class.
        /// </summary>
        public AccessReviewScheduleDefinitionProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// AccessReviewScheduleDefinitionProperties class.
        /// </summary>
        /// <param name="displayName">The display name for the schedule
        /// definition.</param>
        /// <param name="status">This read-only field specifies the status of
        /// an accessReview. Possible values include: 'NotStarted',
        /// 'InProgress', 'Completed', 'Applied', 'Initializing', 'Applying',
        /// 'Completing', 'Scheduled', 'AutoReviewing', 'AutoReviewed',
        /// 'Starting'</param>
        /// <param name="descriptionForAdmins">The description provided by the
        /// access review creator and visible to admins.</param>
        /// <param name="descriptionForReviewers">The description provided by
        /// the access review creator to be shown to reviewers.</param>
        /// <param name="createdBy">The user or other identity who created this
        /// review.</param>
        /// <param name="settings">Access Review Settings.</param>
        /// <param name="scope">This is used to define what to include in scope
        /// of the review. The scope definition includes the resourceId and
        /// roleDefinitionId.</param>
        /// <param name="reviewers">This is the collection of
        /// reviewers.</param>
        /// <param name="reviewersType">This field specifies the type of
        /// reviewers for a review. Usually for a review, reviewers are
        /// explicitly assigned. However, in some cases, the reviewers may not
        /// be assigned and instead be chosen dynamically. For example managers
        /// review or self review. Possible values include: 'Assigned', 'Self',
        /// 'Managers'</param>
        /// <param name="instances">This is the collection of instances
        /// returned when one does an expand on it.</param>
        public AccessReviewScheduleDefinitionProperties(string displayName = default(string), string status = default(string), string descriptionForAdmins = default(string), string descriptionForReviewers = default(string), AccessReviewActorIdentity createdBy = default(AccessReviewActorIdentity), AccessReviewScheduleSettings settings = default(AccessReviewScheduleSettings), AccessReviewScope scope = default(AccessReviewScope), IList<AccessReviewReviewer> reviewers = default(IList<AccessReviewReviewer>), string reviewersType = default(string), IList<AccessReviewInstance> instances = default(IList<AccessReviewInstance>))
        {
            DisplayName = displayName;
            Status = status;
            DescriptionForAdmins = descriptionForAdmins;
            DescriptionForReviewers = descriptionForReviewers;
            CreatedBy = createdBy;
            Settings = settings;
            Scope = scope;
            Reviewers = reviewers;
            ReviewersType = reviewersType;
            Instances = instances;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the display name for the schedule definition.
        /// </summary>
        [JsonProperty(PropertyName = "displayName")]
        public string DisplayName { get; set; }

        /// <summary>
        /// Gets this read-only field specifies the status of an accessReview.
        /// Possible values include: 'NotStarted', 'InProgress', 'Completed',
        /// 'Applied', 'Initializing', 'Applying', 'Completing', 'Scheduled',
        /// 'AutoReviewing', 'AutoReviewed', 'Starting'
        /// </summary>
        [JsonProperty(PropertyName = "status")]
        public string Status { get; private set; }

        /// <summary>
        /// Gets or sets the description provided by the access review creator
        /// and visible to admins.
        /// </summary>
        [JsonProperty(PropertyName = "descriptionForAdmins")]
        public string DescriptionForAdmins { get; set; }

        /// <summary>
        /// Gets or sets the description provided by the access review creator
        /// to be shown to reviewers.
        /// </summary>
        [JsonProperty(PropertyName = "descriptionForReviewers")]
        public string DescriptionForReviewers { get; set; }

        /// <summary>
        /// Gets the user or other identity who created this review.
        /// </summary>
        [JsonProperty(PropertyName = "createdBy")]
        public AccessReviewActorIdentity CreatedBy { get; private set; }

        /// <summary>
        /// Gets or sets access Review Settings.
        /// </summary>
        [JsonProperty(PropertyName = "settings")]
        public AccessReviewScheduleSettings Settings { get; set; }

        /// <summary>
        /// Gets this is used to define what to include in scope of the review.
        /// The scope definition includes the resourceId and roleDefinitionId.
        /// </summary>
        [JsonProperty(PropertyName = "scope")]
        public AccessReviewScope Scope { get; private set; }

        /// <summary>
        /// Gets or sets this is the collection of reviewers.
        /// </summary>
        [JsonProperty(PropertyName = "reviewers")]
        public IList<AccessReviewReviewer> Reviewers { get; set; }

        /// <summary>
        /// Gets this field specifies the type of reviewers for a review.
        /// Usually for a review, reviewers are explicitly assigned. However,
        /// in some cases, the reviewers may not be assigned and instead be
        /// chosen dynamically. For example managers review or self review.
        /// Possible values include: 'Assigned', 'Self', 'Managers'
        /// </summary>
        [JsonProperty(PropertyName = "reviewersType")]
        public string ReviewersType { get; private set; }

        /// <summary>
        /// Gets or sets this is the collection of instances returned when one
        /// does an expand on it.
        /// </summary>
        [JsonProperty(PropertyName = "instances")]
        public IList<AccessReviewInstance> Instances { get; set; }

    }
}
