// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Authorization.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Service Principal Decision Target
    /// </summary>
    [Newtonsoft.Json.JsonObject("servicePrincipal")]
    public partial class ServicePrincipalDecisionTarget : AccessReviewDecisionTarget
    {
        /// <summary>
        /// Initializes a new instance of the ServicePrincipalDecisionTarget
        /// class.
        /// </summary>
        public ServicePrincipalDecisionTarget()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ServicePrincipalDecisionTarget
        /// class.
        /// </summary>
        /// <param name="principalId">The id of service principal whose access
        /// is reviewed.</param>
        /// <param name="principalName">The display name of the service
        /// principal whose access was reviewed.</param>
        /// <param name="appId">The appId for the service principal entity
        /// being reviewed</param>
        public ServicePrincipalDecisionTarget(string principalId = default(string), string principalName = default(string), string appId = default(string))
        {
            PrincipalId = principalId;
            PrincipalName = principalName;
            AppId = appId;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets the id of service principal whose access is reviewed.
        /// </summary>
        [JsonProperty(PropertyName = "principalId")]
        public string PrincipalId { get; private set; }

        /// <summary>
        /// Gets the display name of the service principal whose access was
        /// reviewed.
        /// </summary>
        [JsonProperty(PropertyName = "principalName")]
        public string PrincipalName { get; private set; }

        /// <summary>
        /// Gets the appId for the service principal entity being reviewed
        /// </summary>
        [JsonProperty(PropertyName = "appId")]
        public string AppId { get; private set; }

    }
}
