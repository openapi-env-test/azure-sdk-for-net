// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.WebSites.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// API definitions with backend urls
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class BackendServiceDefinition : Resource
    {
        /// <summary>
        /// Initializes a new instance of the BackendServiceDefinition class.
        /// </summary>
        public BackendServiceDefinition()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the BackendServiceDefinition class.
        /// </summary>
        /// <param name="location">Resource Location</param>
        /// <param name="id">Resource Id</param>
        /// <param name="name">Resource Name</param>
        /// <param name="kind">Kind of resource</param>
        /// <param name="type">Resource type</param>
        /// <param name="tags">Resource tags</param>
        /// <param name="serviceUrl">Url from which the swagger payload will be
        /// fetched</param>
        /// <param name="hostingEnvironmentServiceUrls">Service Urls per
        /// Hosting environment</param>
        public BackendServiceDefinition(string location, string id = default(string), string name = default(string), string kind = default(string), string type = default(string), IDictionary<string, string> tags = default(IDictionary<string, string>), string serviceUrl = default(string), IList<HostingEnvironmentServiceDescriptions> hostingEnvironmentServiceUrls = default(IList<HostingEnvironmentServiceDescriptions>))
            : base(location, id, name, kind, type, tags)
        {
            ServiceUrl = serviceUrl;
            HostingEnvironmentServiceUrls = hostingEnvironmentServiceUrls;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets url from which the swagger payload will be fetched
        /// </summary>
        [JsonProperty(PropertyName = "properties.serviceUrl")]
        public string ServiceUrl { get; set; }

        /// <summary>
        /// Gets or sets service Urls per Hosting environment
        /// </summary>
        [JsonProperty(PropertyName = "properties.hostingEnvironmentServiceUrls")]
        public IList<HostingEnvironmentServiceDescriptions> HostingEnvironmentServiceUrls { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public override void Validate()
        {
            base.Validate();
        }
    }
}
