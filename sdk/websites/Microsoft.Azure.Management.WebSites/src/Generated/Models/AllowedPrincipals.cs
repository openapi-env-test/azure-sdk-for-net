// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.WebSites.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// The configuration settings of the Azure Active Directory allowed
    /// principals.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class AllowedPrincipals : ProxyOnlyResource
    {
        /// <summary>
        /// Initializes a new instance of the AllowedPrincipals class.
        /// </summary>
        public AllowedPrincipals()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the AllowedPrincipals class.
        /// </summary>
        /// <param name="id">Resource Id.</param>
        /// <param name="name">Resource Name.</param>
        /// <param name="kind">Kind of resource.</param>
        /// <param name="type">Resource type.</param>
        /// <param name="groups">The list of the allowed groups.</param>
        /// <param name="identities">The list of the allowed
        /// identities.</param>
        public AllowedPrincipals(string id = default(string), string name = default(string), string kind = default(string), string type = default(string), IList<string> groups = default(IList<string>), IList<string> identities = default(IList<string>))
            : base(id, name, kind, type)
        {
            Groups = groups;
            Identities = identities;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the list of the allowed groups.
        /// </summary>
        [JsonProperty(PropertyName = "properties.groups")]
        public IList<string> Groups { get; set; }

        /// <summary>
        /// Gets or sets the list of the allowed identities.
        /// </summary>
        [JsonProperty(PropertyName = "properties.identities")]
        public IList<string> Identities { get; set; }

    }
}
