// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.WebSites.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Domain availablility check result
    /// </summary>
    public partial class DomainAvailablilityCheckResult
    {
        /// <summary>
        /// Initializes a new instance of the DomainAvailablilityCheckResult
        /// class.
        /// </summary>
        public DomainAvailablilityCheckResult()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the DomainAvailablilityCheckResult
        /// class.
        /// </summary>
        /// <param name="name">Name of the domain</param>
        /// <param name="available">If true then domain can be purchased using
        /// CreateDomain Api</param>
        /// <param name="domainType">Domain type. Possible values include:
        /// 'Regular', 'SoftDeleted'</param>
        public DomainAvailablilityCheckResult(string name = default(string), bool? available = default(bool?), DomainType? domainType = default(DomainType?))
        {
            Name = name;
            Available = available;
            DomainType = domainType;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets name of the domain
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Gets or sets if true then domain can be purchased using
        /// CreateDomain Api
        /// </summary>
        [JsonProperty(PropertyName = "available")]
        public bool? Available { get; set; }

        /// <summary>
        /// Gets or sets domain type. Possible values include: 'Regular',
        /// 'SoftDeleted'
        /// </summary>
        [JsonProperty(PropertyName = "domainType")]
        public DomainType? DomainType { get; set; }

    }
}
