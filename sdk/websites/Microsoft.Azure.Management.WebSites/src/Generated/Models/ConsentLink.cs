// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.WebSites.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    public partial class ConsentLink
    {
        /// <summary>
        /// Initializes a new instance of the ConsentLink class.
        /// </summary>
        public ConsentLink()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ConsentLink class.
        /// </summary>
        /// <param name="link">Uri for the consent link</param>
        /// <param name="firstPartyLoginUri">Uri for first party login</param>
        /// <param name="displayName">Display Name of the parameter in the
        /// connection provider's oauthSettings</param>
        /// <param name="status">Status of the link. Possible values include:
        /// 'Unauthenticated', 'Authenticated', 'Error'</param>
        public ConsentLink(string link = default(string), string firstPartyLoginUri = default(string), string displayName = default(string), LinkState? status = default(LinkState?))
        {
            Link = link;
            FirstPartyLoginUri = firstPartyLoginUri;
            DisplayName = displayName;
            Status = status;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets uri for the consent link
        /// </summary>
        [JsonProperty(PropertyName = "link")]
        public string Link { get; set; }

        /// <summary>
        /// Gets or sets uri for first party login
        /// </summary>
        [JsonProperty(PropertyName = "firstPartyLoginUri")]
        public string FirstPartyLoginUri { get; set; }

        /// <summary>
        /// Gets or sets display Name of the parameter in the connection
        /// provider's oauthSettings
        /// </summary>
        [JsonProperty(PropertyName = "displayName")]
        public string DisplayName { get; set; }

        /// <summary>
        /// Gets or sets status of the link. Possible values include:
        /// 'Unauthenticated', 'Authenticated', 'Error'
        /// </summary>
        [JsonProperty(PropertyName = "status")]
        public LinkState? Status { get; set; }

    }
}
