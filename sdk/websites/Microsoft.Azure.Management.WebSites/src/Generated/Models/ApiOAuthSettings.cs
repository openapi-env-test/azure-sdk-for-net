// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.WebSites.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// OAuth settings for the connection provider
    /// </summary>
    public partial class ApiOAuthSettings
    {
        /// <summary>
        /// Initializes a new instance of the ApiOAuthSettings class.
        /// </summary>
        public ApiOAuthSettings()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ApiOAuthSettings class.
        /// </summary>
        /// <param name="identityProvider">Identity provider</param>
        /// <param name="clientId">Resource provider client id</param>
        /// <param name="clientSecret">Client Secret needed for OAuth</param>
        /// <param name="scopes">OAuth scopes</param>
        /// <param name="redirectUrl">Url</param>
        /// <param name="properties">Read only properties for this oauth
        /// setting.</param>
        /// <param name="customParameters">OAuth parameters key is the name of
        /// parameter</param>
        public ApiOAuthSettings(string identityProvider = default(string), string clientId = default(string), string clientSecret = default(string), IList<string> scopes = default(IList<string>), string redirectUrl = default(string), object properties = default(object), IDictionary<string, ApiOAuthSettingsParameter> customParameters = default(IDictionary<string, ApiOAuthSettingsParameter>))
        {
            IdentityProvider = identityProvider;
            ClientId = clientId;
            ClientSecret = clientSecret;
            Scopes = scopes;
            RedirectUrl = redirectUrl;
            Properties = properties;
            CustomParameters = customParameters;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets identity provider
        /// </summary>
        [JsonProperty(PropertyName = "identityProvider")]
        public string IdentityProvider { get; set; }

        /// <summary>
        /// Gets or sets resource provider client id
        /// </summary>
        [JsonProperty(PropertyName = "clientId")]
        public string ClientId { get; set; }

        /// <summary>
        /// Gets or sets client Secret needed for OAuth
        /// </summary>
        [JsonProperty(PropertyName = "clientSecret")]
        public string ClientSecret { get; set; }

        /// <summary>
        /// Gets or sets oAuth scopes
        /// </summary>
        [JsonProperty(PropertyName = "scopes")]
        public IList<string> Scopes { get; set; }

        /// <summary>
        /// Gets or sets url
        /// </summary>
        [JsonProperty(PropertyName = "redirectUrl")]
        public string RedirectUrl { get; set; }

        /// <summary>
        /// Gets or sets read only properties for this oauth setting.
        /// </summary>
        [JsonProperty(PropertyName = "properties")]
        public object Properties { get; set; }

        /// <summary>
        /// Gets or sets oAuth parameters key is the name of parameter
        /// </summary>
        [JsonProperty(PropertyName = "customParameters")]
        public IDictionary<string, ApiOAuthSettingsParameter> CustomParameters { get; set; }

    }
}
