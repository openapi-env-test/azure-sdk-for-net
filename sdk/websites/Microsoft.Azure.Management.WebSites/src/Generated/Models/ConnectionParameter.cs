// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.WebSites.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// connection provider parameters
    /// </summary>
    public partial class ConnectionParameter
    {
        /// <summary>
        /// Initializes a new instance of the ConnectionParameter class.
        /// </summary>
        public ConnectionParameter()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ConnectionParameter class.
        /// </summary>
        /// <param name="type">Type of the parameter. Possible values include:
        /// 'string', 'securestring', 'secureobject', 'int', 'bool', 'object',
        /// 'array', 'oauthSetting', 'connection'</param>
        /// <param name="defaultValue">Default parameter value</param>
        /// <param name="oAuthSettings">Settings defining OAuth flow for the
        /// back end provider</param>
        /// <param name="uiDefinition">UI definitions</param>
        public ConnectionParameter(ConnectionParameterType? type = default(ConnectionParameterType?), object defaultValue = default(object), ApiOAuthSettings oAuthSettings = default(ApiOAuthSettings), object uiDefinition = default(object))
        {
            Type = type;
            DefaultValue = defaultValue;
            OAuthSettings = oAuthSettings;
            UiDefinition = uiDefinition;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets type of the parameter. Possible values include:
        /// 'string', 'securestring', 'secureobject', 'int', 'bool', 'object',
        /// 'array', 'oauthSetting', 'connection'
        /// </summary>
        [JsonProperty(PropertyName = "type")]
        public ConnectionParameterType? Type { get; set; }

        /// <summary>
        /// Gets or sets default parameter value
        /// </summary>
        [JsonProperty(PropertyName = "defaultValue")]
        public object DefaultValue { get; set; }

        /// <summary>
        /// Gets or sets settings defining OAuth flow for the back end provider
        /// </summary>
        [JsonProperty(PropertyName = "oAuthSettings")]
        public ApiOAuthSettings OAuthSettings { get; set; }

        /// <summary>
        /// Gets or sets UI definitions
        /// </summary>
        [JsonProperty(PropertyName = "uiDefinition")]
        public object UiDefinition { get; set; }

    }
}
