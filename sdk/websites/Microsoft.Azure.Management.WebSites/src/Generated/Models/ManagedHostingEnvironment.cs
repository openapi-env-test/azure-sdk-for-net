// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.WebSites.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Description of a managed hosting environment
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class ManagedHostingEnvironment : Resource
    {
        /// <summary>
        /// Initializes a new instance of the ManagedHostingEnvironment class.
        /// </summary>
        public ManagedHostingEnvironment()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ManagedHostingEnvironment class.
        /// </summary>
        /// <param name="location">Resource Location</param>
        /// <param name="status">Current status of the managed hosting
        /// environment. Possible values include: 'Preparing', 'Ready',
        /// 'Deleting'</param>
        /// <param name="id">Resource Id</param>
        /// <param name="name">Resource Name</param>
        /// <param name="kind">Kind of resource</param>
        /// <param name="type">Resource type</param>
        /// <param name="tags">Resource tags</param>
        /// <param name="managedHostingEnvironmentName">Name of the managed
        /// hosting environment</param>
        /// <param name="managedHostingEnvironmentLocation">Location of the
        /// managed hosting environment e.g. "West US"</param>
        /// <param name="virtualNetwork">Description of the managed hosting
        /// environment's virtual network</param>
        /// <param name="ipsslAddressCount">Number of ip ssl addresses reserved
        /// for the managed hosting environment</param>
        /// <param name="dnsSuffix">DNS suffix of the managed hosting
        /// environment</param>
        /// <param name="subscriptionId">Subscription of the managed hosting
        /// environment (read only)</param>
        /// <param name="resourceGroup">Resource group of the managed hosting
        /// environment (read only)</param>
        /// <param name="environmentIsHealthy">True/false indicating whether
        /// the managed hosting environment is healthy</param>
        /// <param name="environmentStatus">Detailed message about with results
        /// of the last check of the managed hosting environment</param>
        /// <param name="suspended">True/false indicating whether the managed
        /// hosting environment is suspended. The environment can be suspended
        /// e.g. when the management endpoint is no longer available
        /// (most likely because NSG blocked the incoming traffic)</param>
        /// <param name="apiManagementAccount">Resource id of the api
        /// management account associated with this managed hosting environment
        /// (read only)</param>
        public ManagedHostingEnvironment(string location, ManagedHostingEnvironmentStatus status, string id = default(string), string name = default(string), string kind = default(string), string type = default(string), IDictionary<string, string> tags = default(IDictionary<string, string>), string managedHostingEnvironmentName = default(string), string managedHostingEnvironmentLocation = default(string), VirtualNetworkProfile virtualNetwork = default(VirtualNetworkProfile), int? ipsslAddressCount = default(int?), string dnsSuffix = default(string), string subscriptionId = default(string), string resourceGroup = default(string), bool? environmentIsHealthy = default(bool?), string environmentStatus = default(string), bool? suspended = default(bool?), string apiManagementAccount = default(string))
            : base(location, id, name, kind, type, tags)
        {
            ManagedHostingEnvironmentName = managedHostingEnvironmentName;
            ManagedHostingEnvironmentLocation = managedHostingEnvironmentLocation;
            Status = status;
            VirtualNetwork = virtualNetwork;
            IpsslAddressCount = ipsslAddressCount;
            DnsSuffix = dnsSuffix;
            SubscriptionId = subscriptionId;
            ResourceGroup = resourceGroup;
            EnvironmentIsHealthy = environmentIsHealthy;
            EnvironmentStatus = environmentStatus;
            Suspended = suspended;
            ApiManagementAccount = apiManagementAccount;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets name of the managed hosting environment
        /// </summary>
        [JsonProperty(PropertyName = "properties.name")]
        public string ManagedHostingEnvironmentName { get; set; }

        /// <summary>
        /// Gets or sets location of the managed hosting environment e.g. "West
        /// US"
        /// </summary>
        [JsonProperty(PropertyName = "properties.location")]
        public string ManagedHostingEnvironmentLocation { get; set; }

        /// <summary>
        /// Gets or sets current status of the managed hosting environment.
        /// Possible values include: 'Preparing', 'Ready', 'Deleting'
        /// </summary>
        [JsonProperty(PropertyName = "properties.status")]
        public ManagedHostingEnvironmentStatus Status { get; set; }

        /// <summary>
        /// Gets or sets description of the managed hosting environment's
        /// virtual network
        /// </summary>
        [JsonProperty(PropertyName = "properties.virtualNetwork")]
        public VirtualNetworkProfile VirtualNetwork { get; set; }

        /// <summary>
        /// Gets or sets number of ip ssl addresses reserved for the managed
        /// hosting environment
        /// </summary>
        [JsonProperty(PropertyName = "properties.ipsslAddressCount")]
        public int? IpsslAddressCount { get; set; }

        /// <summary>
        /// Gets or sets DNS suffix of the managed hosting environment
        /// </summary>
        [JsonProperty(PropertyName = "properties.dnsSuffix")]
        public string DnsSuffix { get; set; }

        /// <summary>
        /// Gets or sets subscription of the managed hosting environment (read
        /// only)
        /// </summary>
        [JsonProperty(PropertyName = "properties.subscriptionId")]
        public string SubscriptionId { get; set; }

        /// <summary>
        /// Gets or sets resource group of the managed hosting environment
        /// (read only)
        /// </summary>
        [JsonProperty(PropertyName = "properties.resourceGroup")]
        public string ResourceGroup { get; set; }

        /// <summary>
        /// Gets or sets true/false indicating whether the managed hosting
        /// environment is healthy
        /// </summary>
        [JsonProperty(PropertyName = "properties.environmentIsHealthy")]
        public bool? EnvironmentIsHealthy { get; set; }

        /// <summary>
        /// Gets or sets detailed message about with results of the last check
        /// of the managed hosting environment
        /// </summary>
        [JsonProperty(PropertyName = "properties.environmentStatus")]
        public string EnvironmentStatus { get; set; }

        /// <summary>
        /// Gets or sets true/false indicating whether the managed hosting
        /// environment is suspended. The environment can be suspended e.g.
        /// when the management endpoint is no longer available
        /// (most likely because NSG blocked the incoming traffic)
        /// </summary>
        [JsonProperty(PropertyName = "properties.suspended")]
        public bool? Suspended { get; set; }

        /// <summary>
        /// Gets or sets resource id of the api management account associated
        /// with this managed hosting environment (read only)
        /// </summary>
        [JsonProperty(PropertyName = "properties.apiManagementAccount")]
        public string ApiManagementAccount { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public override void Validate()
        {
            base.Validate();
        }
    }
}
