// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.WebSites.Models
{
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;
    using System.Runtime;
    using System.Runtime.Serialization;

    /// <summary>
    /// Defines values for ConnectionParameterType.
    /// </summary>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum ConnectionParameterType
    {
        [EnumMember(Value = "string")]
        String,
        [EnumMember(Value = "securestring")]
        Securestring,
        [EnumMember(Value = "secureobject")]
        Secureobject,
        [EnumMember(Value = "int")]
        Int,
        [EnumMember(Value = "bool")]
        Bool,
        [EnumMember(Value = "object")]
        Object,
        [EnumMember(Value = "array")]
        Array,
        [EnumMember(Value = "oauthSetting")]
        OauthSetting,
        [EnumMember(Value = "connection")]
        Connection
    }
    internal static class ConnectionParameterTypeEnumExtension
    {
        internal static string ToSerializedValue(this ConnectionParameterType? value)
        {
            return value == null ? null : ((ConnectionParameterType)value).ToSerializedValue();
        }

        internal static string ToSerializedValue(this ConnectionParameterType value)
        {
            switch( value )
            {
                case ConnectionParameterType.String:
                    return "string";
                case ConnectionParameterType.Securestring:
                    return "securestring";
                case ConnectionParameterType.Secureobject:
                    return "secureobject";
                case ConnectionParameterType.Int:
                    return "int";
                case ConnectionParameterType.Bool:
                    return "bool";
                case ConnectionParameterType.Object:
                    return "object";
                case ConnectionParameterType.Array:
                    return "array";
                case ConnectionParameterType.OauthSetting:
                    return "oauthSetting";
                case ConnectionParameterType.Connection:
                    return "connection";
            }
            return null;
        }

        internal static ConnectionParameterType? ParseConnectionParameterType(this string value)
        {
            switch( value )
            {
                case "string":
                    return ConnectionParameterType.String;
                case "securestring":
                    return ConnectionParameterType.Securestring;
                case "secureobject":
                    return ConnectionParameterType.Secureobject;
                case "int":
                    return ConnectionParameterType.Int;
                case "bool":
                    return ConnectionParameterType.Bool;
                case "object":
                    return ConnectionParameterType.Object;
                case "array":
                    return ConnectionParameterType.Array;
                case "oauthSetting":
                    return ConnectionParameterType.OauthSetting;
                case "connection":
                    return ConnectionParameterType.Connection;
            }
            return null;
        }
    }
}
