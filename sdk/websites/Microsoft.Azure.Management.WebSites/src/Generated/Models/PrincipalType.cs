// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.WebSites.Models
{
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;
    using System.Runtime;
    using System.Runtime.Serialization;

    /// <summary>
    /// Defines values for PrincipalType.
    /// </summary>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum PrincipalType
    {
        [EnumMember(Value = "ActiveDirectory")]
        ActiveDirectory,
        [EnumMember(Value = "Connection")]
        Connection,
        [EnumMember(Value = "MicrosoftAccount")]
        MicrosoftAccount
    }
    internal static class PrincipalTypeEnumExtension
    {
        internal static string ToSerializedValue(this PrincipalType? value)
        {
            return value == null ? null : ((PrincipalType)value).ToSerializedValue();
        }

        internal static string ToSerializedValue(this PrincipalType value)
        {
            switch( value )
            {
                case PrincipalType.ActiveDirectory:
                    return "ActiveDirectory";
                case PrincipalType.Connection:
                    return "Connection";
                case PrincipalType.MicrosoftAccount:
                    return "MicrosoftAccount";
            }
            return null;
        }

        internal static PrincipalType? ParsePrincipalType(this string value)
        {
            switch( value )
            {
                case "ActiveDirectory":
                    return PrincipalType.ActiveDirectory;
                case "Connection":
                    return PrincipalType.Connection;
                case "MicrosoftAccount":
                    return PrincipalType.MicrosoftAccount;
            }
            return null;
        }
    }
}
