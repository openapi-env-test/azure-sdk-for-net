// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.WebSites.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Value of resource metric
    /// </summary>
    public partial class ResourceMetricValue
    {
        /// <summary>
        /// Initializes a new instance of the ResourceMetricValue class.
        /// </summary>
        public ResourceMetricValue()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ResourceMetricValue class.
        /// </summary>
        /// <param name="timeStamp">Value timestamp</param>
        /// <param name="average">Value average</param>
        /// <param name="minimum">Value minimum</param>
        /// <param name="maximum">Value maximum</param>
        /// <param name="total">Value total</param>
        /// <param name="count">Value count</param>
        public ResourceMetricValue(string timeStamp = default(string), double? average = default(double?), double? minimum = default(double?), double? maximum = default(double?), double? total = default(double?), double? count = default(double?))
        {
            TimeStamp = timeStamp;
            Average = average;
            Minimum = minimum;
            Maximum = maximum;
            Total = total;
            Count = count;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets value timestamp
        /// </summary>
        [JsonProperty(PropertyName = "timeStamp")]
        public string TimeStamp { get; set; }

        /// <summary>
        /// Gets or sets value average
        /// </summary>
        [JsonProperty(PropertyName = "average")]
        public double? Average { get; set; }

        /// <summary>
        /// Gets or sets value minimum
        /// </summary>
        [JsonProperty(PropertyName = "minimum")]
        public double? Minimum { get; set; }

        /// <summary>
        /// Gets or sets value maximum
        /// </summary>
        [JsonProperty(PropertyName = "maximum")]
        public double? Maximum { get; set; }

        /// <summary>
        /// Gets or sets value total
        /// </summary>
        [JsonProperty(PropertyName = "total")]
        public double? Total { get; set; }

        /// <summary>
        /// Gets or sets value count
        /// </summary>
        [JsonProperty(PropertyName = "count")]
        public double? Count { get; set; }

    }
}
