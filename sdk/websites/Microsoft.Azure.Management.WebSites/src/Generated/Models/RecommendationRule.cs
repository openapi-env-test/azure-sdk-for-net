// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.WebSites.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Represents a recommendation rule that the recommendation engine can
    /// perform
    /// </summary>
    public partial class RecommendationRule
    {
        /// <summary>
        /// Initializes a new instance of the RecommendationRule class.
        /// </summary>
        public RecommendationRule()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the RecommendationRule class.
        /// </summary>
        /// <param name="level">Level of impact indicating how critical this
        /// rule is. Possible values include: 'Critical', 'Warning',
        /// 'Information', 'NonUrgentSuggestion'</param>
        /// <param name="channels">List of available channels that this rule
        /// applies. Possible values include: 'Notification', 'Api', 'Email',
        /// 'All'</param>
        /// <param name="name">Unique name of the rule</param>
        /// <param name="displayName">UI friendly name of the rule</param>
        /// <param name="message">Localized name of the rule (Good for
        /// UI)</param>
        /// <param name="recommendationId">Recommendation ID of an associated
        /// recommendation object tied to the rule, if exists.
        /// If such an object doesn't exist, it is set to null.</param>
        /// <param name="description">Localized detailed description of the
        /// rule</param>
        /// <param name="actionName">Name of action that is recommended by this
        /// rule in string</param>
        /// <param name="enabled">On/off flag indicating the rule is currently
        /// enabled or disabled.</param>
        /// <param name="tags">An array of category tags that the rule
        /// contains.</param>
        public RecommendationRule(NotificationLevel level, Channels channels, string name = default(string), string displayName = default(string), string message = default(string), string recommendationId = default(string), string description = default(string), string actionName = default(string), int? enabled = default(int?), IList<string> tags = default(IList<string>))
        {
            Name = name;
            DisplayName = displayName;
            Message = message;
            RecommendationId = recommendationId;
            Description = description;
            ActionName = actionName;
            Enabled = enabled;
            Level = level;
            Channels = channels;
            Tags = tags;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets unique name of the rule
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Gets or sets UI friendly name of the rule
        /// </summary>
        [JsonProperty(PropertyName = "displayName")]
        public string DisplayName { get; set; }

        /// <summary>
        /// Gets or sets localized name of the rule (Good for UI)
        /// </summary>
        [JsonProperty(PropertyName = "message")]
        public string Message { get; set; }

        /// <summary>
        /// Gets or sets recommendation ID of an associated recommendation
        /// object tied to the rule, if exists.
        /// If such an object doesn't exist, it is set to null.
        /// </summary>
        [JsonProperty(PropertyName = "recommendationId")]
        public string RecommendationId { get; set; }

        /// <summary>
        /// Gets or sets localized detailed description of the rule
        /// </summary>
        [JsonProperty(PropertyName = "description")]
        public string Description { get; set; }

        /// <summary>
        /// Gets or sets name of action that is recommended by this rule in
        /// string
        /// </summary>
        [JsonProperty(PropertyName = "actionName")]
        public string ActionName { get; set; }

        /// <summary>
        /// Gets or sets on/off flag indicating the rule is currently enabled
        /// or disabled.
        /// </summary>
        [JsonProperty(PropertyName = "enabled")]
        public int? Enabled { get; set; }

        /// <summary>
        /// Gets or sets level of impact indicating how critical this rule is.
        /// Possible values include: 'Critical', 'Warning', 'Information',
        /// 'NonUrgentSuggestion'
        /// </summary>
        [JsonProperty(PropertyName = "level")]
        public NotificationLevel Level { get; set; }

        /// <summary>
        /// Gets or sets list of available channels that this rule applies.
        /// Possible values include: 'Notification', 'Api', 'Email', 'All'
        /// </summary>
        [JsonProperty(PropertyName = "channels")]
        public Channels Channels { get; set; }

        /// <summary>
        /// Gets or sets an array of category tags that the rule contains.
        /// </summary>
        [JsonProperty(PropertyName = "tags")]
        public IList<string> Tags { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
        }
    }
}
