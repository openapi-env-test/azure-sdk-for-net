// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.HybridData.Models
{
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;
    using System.Runtime;
    using System.Runtime.Serialization;

    /// <summary>
    /// Defines values for JobDefinitionState.
    /// </summary>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum JobDefinitionState
    {
        [EnumMember(Value = "Created")]
        Created,
        [EnumMember(Value = "Queueing")]
        Queueing,
        [EnumMember(Value = "Waiting")]
        Waiting,
        [EnumMember(Value = "Running")]
        Running,
        [EnumMember(Value = "Complete")]
        Complete,
        [EnumMember(Value = "Cancelling")]
        Cancelling,
        [EnumMember(Value = "Cancelled")]
        Cancelled,
        [EnumMember(Value = "Paused")]
        Paused
    }
    internal static class JobDefinitionStateEnumExtension
    {
        internal static string ToSerializedValue(this JobDefinitionState? value)
        {
            return value == null ? null : ((JobDefinitionState)value).ToSerializedValue();
        }

        internal static string ToSerializedValue(this JobDefinitionState value)
        {
            switch( value )
            {
                case JobDefinitionState.Created:
                    return "Created";
                case JobDefinitionState.Queueing:
                    return "Queueing";
                case JobDefinitionState.Waiting:
                    return "Waiting";
                case JobDefinitionState.Running:
                    return "Running";
                case JobDefinitionState.Complete:
                    return "Complete";
                case JobDefinitionState.Cancelling:
                    return "Cancelling";
                case JobDefinitionState.Cancelled:
                    return "Cancelled";
                case JobDefinitionState.Paused:
                    return "Paused";
            }
            return null;
        }

        internal static JobDefinitionState? ParseJobDefinitionState(this string value)
        {
            switch( value )
            {
                case "Created":
                    return JobDefinitionState.Created;
                case "Queueing":
                    return JobDefinitionState.Queueing;
                case "Waiting":
                    return JobDefinitionState.Waiting;
                case "Running":
                    return JobDefinitionState.Running;
                case "Complete":
                    return JobDefinitionState.Complete;
                case "Cancelling":
                    return JobDefinitionState.Cancelling;
                case "Cancelled":
                    return JobDefinitionState.Cancelled;
                case "Paused":
                    return JobDefinitionState.Paused;
            }
            return null;
        }
    }
}
