// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Network.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// NetworkSecurityGroup resource
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class NetworkSecurityGroup : Resource
    {
        /// <summary>
        /// Initializes a new instance of the NetworkSecurityGroup class.
        /// </summary>
        public NetworkSecurityGroup()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the NetworkSecurityGroup class.
        /// </summary>
        /// <param name="location">Resource location</param>
        /// <param name="id">Resource Id</param>
        /// <param name="name">Resource name</param>
        /// <param name="type">Resource type</param>
        /// <param name="tags">Resource tags</param>
        /// <param name="securityRules">Gets or sets Security rules of network
        /// security group</param>
        /// <param name="defaultSecurityRules">Gets or sets Default security
        /// rules of network security group</param>
        /// <param name="networkInterfaces">Gets collection of references to
        /// Network Interfaces</param>
        /// <param name="subnets">Gets collection of references to
        /// subnets</param>
        /// <param name="resourceGuid">Gets or sets resource guid property of
        /// the network security group resource</param>
        /// <param name="provisioningState">Gets or sets Provisioning state of
        /// the PublicIP resource Updating/Deleting/Failed</param>
        /// <param name="etag">Gets a unique read-only string that changes
        /// whenever the resource is updated</param>
        public NetworkSecurityGroup(string location, string id = default(string), string name = default(string), string type = default(string), IDictionary<string, string> tags = default(IDictionary<string, string>), IList<SecurityRule> securityRules = default(IList<SecurityRule>), IList<SecurityRule> defaultSecurityRules = default(IList<SecurityRule>), IList<SubResource> networkInterfaces = default(IList<SubResource>), IList<SubResource> subnets = default(IList<SubResource>), string resourceGuid = default(string), string provisioningState = default(string), string etag = default(string))
            : base(location, id, name, type, tags)
        {
            SecurityRules = securityRules;
            DefaultSecurityRules = defaultSecurityRules;
            NetworkInterfaces = networkInterfaces;
            Subnets = subnets;
            ResourceGuid = resourceGuid;
            ProvisioningState = provisioningState;
            Etag = etag;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets Security rules of network security group
        /// </summary>
        [JsonProperty(PropertyName = "properties.securityRules")]
        public IList<SecurityRule> SecurityRules { get; set; }

        /// <summary>
        /// Gets or sets Default security rules of network security group
        /// </summary>
        [JsonProperty(PropertyName = "properties.defaultSecurityRules")]
        public IList<SecurityRule> DefaultSecurityRules { get; set; }

        /// <summary>
        /// Gets collection of references to Network Interfaces
        /// </summary>
        [JsonProperty(PropertyName = "properties.networkInterfaces")]
        public IList<SubResource> NetworkInterfaces { get; set; }

        /// <summary>
        /// Gets collection of references to subnets
        /// </summary>
        [JsonProperty(PropertyName = "properties.subnets")]
        public IList<SubResource> Subnets { get; set; }

        /// <summary>
        /// Gets or sets resource guid property of the network security group
        /// resource
        /// </summary>
        [JsonProperty(PropertyName = "properties.resourceGuid")]
        public string ResourceGuid { get; set; }

        /// <summary>
        /// Gets or sets Provisioning state of the PublicIP resource
        /// Updating/Deleting/Failed
        /// </summary>
        [JsonProperty(PropertyName = "properties.provisioningState")]
        public string ProvisioningState { get; set; }

        /// <summary>
        /// Gets a unique read-only string that changes whenever the resource
        /// is updated
        /// </summary>
        [JsonProperty(PropertyName = "etag")]
        public string Etag { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public override void Validate()
        {
            base.Validate();
            if (SecurityRules != null)
            {
                foreach (var element in SecurityRules)
                {
                    if (element != null)
                    {
                        element.Validate();
                    }
                }
            }
            if (DefaultSecurityRules != null)
            {
                foreach (var element1 in DefaultSecurityRules)
                {
                    if (element1 != null)
                    {
                        element1.Validate();
                    }
                }
            }
        }
    }
}
