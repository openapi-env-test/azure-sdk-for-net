// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Network.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    public partial class NetworkManagerGroupItem
    {
        /// <summary>
        /// Initializes a new instance of the NetworkManagerGroupItem class.
        /// </summary>
        public NetworkManagerGroupItem()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the NetworkManagerGroupItem class.
        /// </summary>
        /// <param name="networkGroupId">Network manager group Id.</param>
        /// <param name="deleteExistingPeering">Flag if need to remove current
        /// peerings.</param>
        /// <param name="groupConnectivity">Group Connectivity. Possible values
        /// include: 'Transitive', 'NonTransitive'</param>
        public NetworkManagerGroupItem(string networkGroupId = default(string), bool? deleteExistingPeering = default(bool?), string groupConnectivity = default(string))
        {
            NetworkGroupId = networkGroupId;
            DeleteExistingPeering = deleteExistingPeering;
            GroupConnectivity = groupConnectivity;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets network manager group Id.
        /// </summary>
        [JsonProperty(PropertyName = "networkGroupId")]
        public string NetworkGroupId { get; set; }

        /// <summary>
        /// Gets or sets flag if need to remove current peerings.
        /// </summary>
        [JsonProperty(PropertyName = "deleteExistingPeering")]
        public bool? DeleteExistingPeering { get; set; }

        /// <summary>
        /// Gets or sets group Connectivity. Possible values include:
        /// 'Transitive', 'NonTransitive'
        /// </summary>
        [JsonProperty(PropertyName = "groupConnectivity")]
        public string GroupConnectivity { get; set; }

    }
}
