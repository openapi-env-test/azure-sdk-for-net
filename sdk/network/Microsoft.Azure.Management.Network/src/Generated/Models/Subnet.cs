// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Network.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Subnet in a VirtualNetwork resource
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class Subnet : SubResource
    {
        /// <summary>
        /// Initializes a new instance of the Subnet class.
        /// </summary>
        public Subnet()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Subnet class.
        /// </summary>
        /// <param name="addressPrefix">Gets or sets Address prefix for the
        /// subnet.</param>
        /// <param name="id">Resource Id</param>
        /// <param name="networkSecurityGroup">Gets or sets the reference of
        /// the NetworkSecurityGroup resource</param>
        /// <param name="routeTable">Gets or sets the reference of the
        /// RouteTable resource</param>
        /// <param name="ipConfigurations">Gets array of references to the
        /// network interface IP configurations using subnet</param>
        /// <param name="provisioningState">Gets or sets Provisioning state of
        /// the PublicIP resource Updating/Deleting/Failed</param>
        /// <param name="name">Gets name of the resource that is unique within
        /// a resource group. This name can be used to access the
        /// resource</param>
        /// <param name="etag">A unique read-only string that changes whenever
        /// the resource is updated</param>
        public Subnet(string addressPrefix, string id = default(string), SubResource networkSecurityGroup = default(SubResource), SubResource routeTable = default(SubResource), IList<SubResource> ipConfigurations = default(IList<SubResource>), string provisioningState = default(string), string name = default(string), string etag = default(string))
            : base(id)
        {
            AddressPrefix = addressPrefix;
            NetworkSecurityGroup = networkSecurityGroup;
            RouteTable = routeTable;
            IpConfigurations = ipConfigurations;
            ProvisioningState = provisioningState;
            Name = name;
            Etag = etag;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets Address prefix for the subnet.
        /// </summary>
        [JsonProperty(PropertyName = "properties.addressPrefix")]
        public string AddressPrefix { get; set; }

        /// <summary>
        /// Gets or sets the reference of the NetworkSecurityGroup resource
        /// </summary>
        [JsonProperty(PropertyName = "properties.networkSecurityGroup")]
        public SubResource NetworkSecurityGroup { get; set; }

        /// <summary>
        /// Gets or sets the reference of the RouteTable resource
        /// </summary>
        [JsonProperty(PropertyName = "properties.routeTable")]
        public SubResource RouteTable { get; set; }

        /// <summary>
        /// Gets array of references to the network interface IP configurations
        /// using subnet
        /// </summary>
        [JsonProperty(PropertyName = "properties.ipConfigurations")]
        public IList<SubResource> IpConfigurations { get; set; }

        /// <summary>
        /// Gets or sets Provisioning state of the PublicIP resource
        /// Updating/Deleting/Failed
        /// </summary>
        [JsonProperty(PropertyName = "properties.provisioningState")]
        public string ProvisioningState { get; set; }

        /// <summary>
        /// Gets name of the resource that is unique within a resource group.
        /// This name can be used to access the resource
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Gets or sets a unique read-only string that changes whenever the
        /// resource is updated
        /// </summary>
        [JsonProperty(PropertyName = "etag")]
        public string Etag { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (AddressPrefix == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "AddressPrefix");
            }
        }
    }
}
