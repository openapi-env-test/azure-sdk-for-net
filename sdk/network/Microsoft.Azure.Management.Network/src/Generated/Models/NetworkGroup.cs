// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Network.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// The Managed Network resource
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class NetworkGroup : SubResource
    {
        /// <summary>
        /// Initializes a new instance of the NetworkGroup class.
        /// </summary>
        public NetworkGroup()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the NetworkGroup class.
        /// </summary>
        /// <param name="id">Resource ID.</param>
        /// <param name="displayName">A friendly name for the network
        /// group.</param>
        /// <param name="description">A description of the network
        /// group.</param>
        /// <param name="groupMembers">Group members of network group.</param>
        /// <param name="conditionalMembership">Network group conditional
        /// filter.</param>
        /// <param name="provisioningState">The provisioning state of the scope
        /// assignment resource. Possible values include: 'Succeeded',
        /// 'Updating', 'Deleting', 'Failed'</param>
        /// <param name="name">Resource name.</param>
        /// <param name="tags">Resource tags.</param>
        /// <param name="type">Resource type.</param>
        /// <param name="etag">A unique read-only string that changes whenever
        /// the resource is updated.</param>
        public NetworkGroup(string id = default(string), string displayName = default(string), string description = default(string), IList<GroupMembersItem> groupMembers = default(IList<GroupMembersItem>), object conditionalMembership = default(object), string provisioningState = default(string), string name = default(string), IDictionary<string, string> tags = default(IDictionary<string, string>), string type = default(string), string etag = default(string))
            : base(id)
        {
            DisplayName = displayName;
            Description = description;
            GroupMembers = groupMembers;
            ConditionalMembership = conditionalMembership;
            ProvisioningState = provisioningState;
            Name = name;
            Tags = tags;
            Type = type;
            Etag = etag;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets a friendly name for the network group.
        /// </summary>
        [JsonProperty(PropertyName = "properties.displayName")]
        public string DisplayName { get; set; }

        /// <summary>
        /// Gets or sets a description of the network group.
        /// </summary>
        [JsonProperty(PropertyName = "properties.description")]
        public string Description { get; set; }

        /// <summary>
        /// Gets or sets group members of network group.
        /// </summary>
        [JsonProperty(PropertyName = "properties.groupMembers")]
        public IList<GroupMembersItem> GroupMembers { get; set; }

        /// <summary>
        /// Gets or sets network group conditional filter.
        /// </summary>
        [JsonProperty(PropertyName = "properties.conditionalMembership")]
        public object ConditionalMembership { get; set; }

        /// <summary>
        /// Gets the provisioning state of the scope assignment resource.
        /// Possible values include: 'Succeeded', 'Updating', 'Deleting',
        /// 'Failed'
        /// </summary>
        [JsonProperty(PropertyName = "properties.provisioningState")]
        public string ProvisioningState { get; private set; }

        /// <summary>
        /// Gets resource name.
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; private set; }

        /// <summary>
        /// Gets or sets resource tags.
        /// </summary>
        [JsonProperty(PropertyName = "tags")]
        public IDictionary<string, string> Tags { get; set; }

        /// <summary>
        /// Gets resource type.
        /// </summary>
        [JsonProperty(PropertyName = "type")]
        public string Type { get; private set; }

        /// <summary>
        /// Gets a unique read-only string that changes whenever the resource
        /// is updated.
        /// </summary>
        [JsonProperty(PropertyName = "etag")]
        public string Etag { get; private set; }

    }
}
