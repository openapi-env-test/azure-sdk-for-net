// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Network.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// configuration Id need to deploy.
    /// </summary>
    public partial class CommitsPropertiesSecurityConfiguration : SecurityConfiguration
    {
        /// <summary>
        /// Initializes a new instance of the
        /// CommitsPropertiesSecurityConfiguration class.
        /// </summary>
        public CommitsPropertiesSecurityConfiguration()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// CommitsPropertiesSecurityConfiguration class.
        /// </summary>
        /// <param name="id">Resource ID.</param>
        /// <param name="displayName">A display name of the network manager
        /// security Configuration.</param>
        /// <param name="description">A description of the network manager
        /// security Configuration.</param>
        /// <param name="provisioningState">The provisioning state of the scope
        /// assignment resource. Possible values include: 'Succeeded',
        /// 'Updating', 'Deleting', 'Failed'</param>
        /// <param name="name">Resource name.</param>
        /// <param name="tags">Resource tags.</param>
        /// <param name="type">Resource type.</param>
        /// <param name="etag">A unique read-only string that changes whenever
        /// the resource is updated.</param>
        /// <param name="rules">configuration rule.</param>
        public CommitsPropertiesSecurityConfiguration(string id = default(string), string displayName = default(string), string description = default(string), string provisioningState = default(string), string name = default(string), IDictionary<string, string> tags = default(IDictionary<string, string>), string type = default(string), string etag = default(string), IList<SecurityConfigurationRule> rules = default(IList<SecurityConfigurationRule>))
            : base(id, displayName, description, provisioningState, name, tags, type, etag)
        {
            Rules = rules;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets configuration rule.
        /// </summary>
        [JsonProperty(PropertyName = "rules")]
        public IList<SecurityConfigurationRule> Rules { get; set; }

    }
}
