// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Network.Models
{
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// configuration Id need to deploy.
    /// </summary>
    public partial class CommitsPropertiesConnectivityConfiguration : ConnectivityConfiguration
    {
        /// <summary>
        /// Initializes a new instance of the
        /// CommitsPropertiesConnectivityConfiguration class.
        /// </summary>
        public CommitsPropertiesConnectivityConfiguration()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// CommitsPropertiesConnectivityConfiguration class.
        /// </summary>
        /// <param name="topology">Gets or sets the connectivity type of a
        /// network structure Configuration. Possible values include:
        /// 'HubAndSpokeTopology', 'MeshTopology'</param>
        /// <param name="id">Resource ID.</param>
        /// <param name="displayName">A friendly name for the
        /// assignment.</param>
        /// <param name="description">A description of the Connectivity
        /// Configuration.</param>
        /// <param name="gatewayVnetId">Gets or sets the gateway vnet
        /// ID</param>
        /// <param name="gatewayVIP">Gets or sets the gateway vip ID</param>
        /// <param name="hubId">Gets or sets the hub virtual network ID</param>
        /// <param name="appliesToGroups">Groups for configuration</param>
        /// <param name="provisioningState">The provisioning state of the
        /// peering Configuration resource. Possible values include:
        /// 'Succeeded', 'Updating', 'Deleting', 'Failed'</param>
        /// <param name="name">Resource name.</param>
        /// <param name="type">Resource type.</param>
        /// <param name="tags">Resource tags.</param>
        /// <param name="etag">A unique read-only string that changes whenever
        /// the resource is updated.</param>
        public CommitsPropertiesConnectivityConfiguration(string topology, string id = default(string), string displayName = default(string), string description = default(string), string gatewayVnetId = default(string), string gatewayVIP = default(string), string hubId = default(string), IList<NetworkManagerGroupItem> appliesToGroups = default(IList<NetworkManagerGroupItem>), string provisioningState = default(string), string name = default(string), string type = default(string), IDictionary<string, string> tags = default(IDictionary<string, string>), string etag = default(string))
            : base(topology, id, displayName, description, gatewayVnetId, gatewayVIP, hubId, appliesToGroups, provisioningState, name, type, tags, etag)
        {
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public override void Validate()
        {
            base.Validate();
        }
    }
}
