// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Network.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// A common class for general resource information
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class VirtualNetworkGateway : Resource
    {
        /// <summary>
        /// Initializes a new instance of the VirtualNetworkGateway class.
        /// </summary>
        public VirtualNetworkGateway()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the VirtualNetworkGateway class.
        /// </summary>
        /// <param name="location">Resource location</param>
        /// <param name="id">Resource Id</param>
        /// <param name="name">Resource name</param>
        /// <param name="type">Resource type</param>
        /// <param name="tags">Resource tags</param>
        /// <param name="ipConfigurations">IpConfigurations for Virtual network
        /// gateway.</param>
        /// <param name="gatewayType">The type of this virtual network gateway.
        /// Possible values include: 'Vpn', 'ExpressRoute'</param>
        /// <param name="vpnType">The type of this virtual network gateway.
        /// Possible values include: 'PolicyBased', 'RouteBased'</param>
        /// <param name="enableBgp">EnableBgp Flag</param>
        /// <param name="gatewayDefaultSite">Gets or sets the reference of the
        /// LocalNetworkGateway resource which represents Local network site
        /// having default routes. Assign Null value in case of removing
        /// existing default site setting.</param>
        /// <param name="resourceGuid">Gets or sets resource guid property of
        /// the VirtualNetworkGateway resource</param>
        /// <param name="provisioningState">Gets or sets Provisioning state of
        /// the VirtualNetworkGateway resource Updating/Deleting/Failed</param>
        /// <param name="etag">Gets a unique read-only string that changes
        /// whenever the resource is updated</param>
        public VirtualNetworkGateway(string location, string id = default(string), string name = default(string), string type = default(string), IDictionary<string, string> tags = default(IDictionary<string, string>), IList<VirtualNetworkGatewayIpConfiguration> ipConfigurations = default(IList<VirtualNetworkGatewayIpConfiguration>), string gatewayType = default(string), string vpnType = default(string), bool? enableBgp = default(bool?), SubResource gatewayDefaultSite = default(SubResource), string resourceGuid = default(string), string provisioningState = default(string), string etag = default(string))
            : base(location, id, name, type, tags)
        {
            IpConfigurations = ipConfigurations;
            GatewayType = gatewayType;
            VpnType = vpnType;
            EnableBgp = enableBgp;
            GatewayDefaultSite = gatewayDefaultSite;
            ResourceGuid = resourceGuid;
            ProvisioningState = provisioningState;
            Etag = etag;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets ipConfigurations for Virtual network gateway.
        /// </summary>
        [JsonProperty(PropertyName = "properties.ipConfigurations")]
        public IList<VirtualNetworkGatewayIpConfiguration> IpConfigurations { get; set; }

        /// <summary>
        /// Gets or sets the type of this virtual network gateway. Possible
        /// values include: 'Vpn', 'ExpressRoute'
        /// </summary>
        [JsonProperty(PropertyName = "properties.gatewayType")]
        public string GatewayType { get; set; }

        /// <summary>
        /// Gets or sets the type of this virtual network gateway. Possible
        /// values include: 'PolicyBased', 'RouteBased'
        /// </summary>
        [JsonProperty(PropertyName = "properties.vpnType")]
        public string VpnType { get; set; }

        /// <summary>
        /// Gets or sets enableBgp Flag
        /// </summary>
        [JsonProperty(PropertyName = "properties.enableBgp")]
        public bool? EnableBgp { get; set; }

        /// <summary>
        /// Gets or sets the reference of the LocalNetworkGateway resource
        /// which represents Local network site having default routes. Assign
        /// Null value in case of removing existing default site setting.
        /// </summary>
        [JsonProperty(PropertyName = "properties.gatewayDefaultSite")]
        public SubResource GatewayDefaultSite { get; set; }

        /// <summary>
        /// Gets or sets resource guid property of the VirtualNetworkGateway
        /// resource
        /// </summary>
        [JsonProperty(PropertyName = "properties.resourceGuid")]
        public string ResourceGuid { get; set; }

        /// <summary>
        /// Gets or sets Provisioning state of the VirtualNetworkGateway
        /// resource Updating/Deleting/Failed
        /// </summary>
        [JsonProperty(PropertyName = "properties.provisioningState")]
        public string ProvisioningState { get; set; }

        /// <summary>
        /// Gets a unique read-only string that changes whenever the resource
        /// is updated
        /// </summary>
        [JsonProperty(PropertyName = "etag")]
        public string Etag { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public override void Validate()
        {
            base.Validate();
        }
    }
}
