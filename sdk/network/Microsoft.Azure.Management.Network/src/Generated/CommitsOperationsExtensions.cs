// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Network
{
    using Microsoft.Rest;
    using Microsoft.Rest.Azure;
    using Models;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for CommitsOperations.
    /// </summary>
    public static partial class CommitsOperationsExtensions
    {
            /// <summary>
            /// The Get commit operation to get a Managed Network Commit
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group.
            /// </param>
            /// <param name='networkManagerName'>
            /// The name of the network manager.
            /// </param>
            /// <param name='commitName'>
            /// The name of the network manager commit.
            /// </param>
            public static Commit Get(this ICommitsOperations operations, string resourceGroupName, string networkManagerName, string commitName)
            {
                return operations.GetAsync(resourceGroupName, networkManagerName, commitName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// The Get commit operation to get a Managed Network Commit
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group.
            /// </param>
            /// <param name='networkManagerName'>
            /// The name of the network manager.
            /// </param>
            /// <param name='commitName'>
            /// The name of the network manager commit.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<Commit> GetAsync(this ICommitsOperations operations, string resourceGroupName, string networkManagerName, string commitName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetWithHttpMessagesAsync(resourceGroupName, networkManagerName, commitName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// The put commit operation put a new Managed Network Commit
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='commit'>
            /// Parameters supplied to post a Managed Network Commit
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group.
            /// </param>
            /// <param name='networkManagerName'>
            /// The name of the network manager.
            /// </param>
            /// <param name='commitName'>
            /// The name of the network manager commit.
            /// </param>
            public static Commit Put(this ICommitsOperations operations, Commit commit, string resourceGroupName, string networkManagerName, string commitName)
            {
                return operations.PutAsync(commit, resourceGroupName, networkManagerName, commitName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// The put commit operation put a new Managed Network Commit
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='commit'>
            /// Parameters supplied to post a Managed Network Commit
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group.
            /// </param>
            /// <param name='networkManagerName'>
            /// The name of the network manager.
            /// </param>
            /// <param name='commitName'>
            /// The name of the network manager commit.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<Commit> PutAsync(this ICommitsOperations operations, Commit commit, string resourceGroupName, string networkManagerName, string commitName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.PutWithHttpMessagesAsync(commit, resourceGroupName, networkManagerName, commitName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// The Delete operation deletes a Managed Network Commit
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group.
            /// </param>
            /// <param name='networkManagerName'>
            /// The name of the network manager.
            /// </param>
            /// <param name='commitName'>
            /// The name of the network manager commit.
            /// </param>
            public static void Delete(this ICommitsOperations operations, string resourceGroupName, string networkManagerName, string commitName)
            {
                operations.DeleteAsync(resourceGroupName, networkManagerName, commitName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// The Delete operation deletes a Managed Network Commit
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group.
            /// </param>
            /// <param name='networkManagerName'>
            /// The name of the network manager.
            /// </param>
            /// <param name='commitName'>
            /// The name of the network manager commit.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task DeleteAsync(this ICommitsOperations operations, string resourceGroupName, string networkManagerName, string commitName, CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.DeleteWithHttpMessagesAsync(resourceGroupName, networkManagerName, commitName, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <summary>
            /// The put commit operation put a new Managed Network Commit
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='commit'>
            /// Parameters supplied to post a Managed Network Commit
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group.
            /// </param>
            /// <param name='networkManagerName'>
            /// The name of the network manager.
            /// </param>
            /// <param name='commitName'>
            /// The name of the network manager commit.
            /// </param>
            public static Commit BeginPut(this ICommitsOperations operations, Commit commit, string resourceGroupName, string networkManagerName, string commitName)
            {
                return operations.BeginPutAsync(commit, resourceGroupName, networkManagerName, commitName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// The put commit operation put a new Managed Network Commit
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='commit'>
            /// Parameters supplied to post a Managed Network Commit
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group.
            /// </param>
            /// <param name='networkManagerName'>
            /// The name of the network manager.
            /// </param>
            /// <param name='commitName'>
            /// The name of the network manager commit.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<Commit> BeginPutAsync(this ICommitsOperations operations, Commit commit, string resourceGroupName, string networkManagerName, string commitName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.BeginPutWithHttpMessagesAsync(commit, resourceGroupName, networkManagerName, commitName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// The Delete operation deletes a Managed Network Commit
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group.
            /// </param>
            /// <param name='networkManagerName'>
            /// The name of the network manager.
            /// </param>
            /// <param name='commitName'>
            /// The name of the network manager commit.
            /// </param>
            public static void BeginDelete(this ICommitsOperations operations, string resourceGroupName, string networkManagerName, string commitName)
            {
                operations.BeginDeleteAsync(resourceGroupName, networkManagerName, commitName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// The Delete operation deletes a Managed Network Commit
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group.
            /// </param>
            /// <param name='networkManagerName'>
            /// The name of the network manager.
            /// </param>
            /// <param name='commitName'>
            /// The name of the network manager commit.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task BeginDeleteAsync(this ICommitsOperations operations, string resourceGroupName, string networkManagerName, string commitName, CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.BeginDeleteWithHttpMessagesAsync(resourceGroupName, networkManagerName, commitName, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

    }
}
