// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Azure.Messaging.WebPubSub
{
    using Microsoft.Rest;
    using Models;
    using System.Collections;
    using System.Collections.Generic;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// WebPubSubOperations operations.
    /// </summary>
    public partial interface IWebPubSubOperations
    {
        /// <summary>
        /// Generate token for the client to connect Azure Web PubSub service.
        /// </summary>
        /// <param name='endpoint'>
        /// HTTP or HTTPS endpoint for the Web PubSub service instance.
        /// </param>
        /// <param name='hub'>
        /// Target hub name, which should start with alphabetic characters and
        /// only contain alpha-numeric characters or underscore. touch
        /// </param>
        /// <param name='apiVersion'>
        /// The version of the REST APIs.
        /// </param>
        /// <param name='userId'>
        /// User Id.
        /// </param>
        /// <param name='role'>
        /// Roles that the connection with the generated token will have.
        /// </param>
        /// <param name='minutesToExpire'>
        /// The expire time of the generated token.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorDetailException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationResponse<ClientTokenResponse,WebPubSubGenerateClientTokenHeaders>> GenerateClientTokenWithHttpMessagesAsync(string endpoint, string hub, string apiVersion, string userId = default(string), IList<string> role = default(IList<string>), int? minutesToExpire = 60, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Close the connections in the hub.
        /// </summary>
        /// <param name='endpoint'>
        /// HTTP or HTTPS endpoint for the Web PubSub service instance.
        /// </param>
        /// <param name='hub'>
        /// Target hub name, which should start with alphabetic characters and
        /// only contain alpha-numeric characters or underscore.
        /// </param>
        /// <param name='apiVersion'>
        /// The version of the REST APIs.
        /// </param>
        /// <param name='excluded'>
        /// Exclude these connectionIds when closing the connections in the
        /// hub.
        /// </param>
        /// <param name='reason'>
        /// The reason closing the client connection.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorDetailException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationHeaderResponse<WebPubSubCloseAllConnectionsHeaders>> CloseAllConnectionsWithHttpMessagesAsync(string endpoint, string hub, string apiVersion, IList<string> excluded = default(IList<string>), string reason = default(string), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Broadcast content inside request body to all the connected client
        /// connections.
        /// </summary>
        /// <param name='endpoint'>
        /// HTTP or HTTPS endpoint for the Web PubSub service instance.
        /// </param>
        /// <param name='hub'>
        /// Target hub name, which should start with alphabetic characters and
        /// only contain alpha-numeric characters or underscore.
        /// </param>
        /// <param name='apiVersion'>
        /// The version of the REST APIs.
        /// </param>
        /// <param name='message'>
        /// The payload body.
        /// </param>
        /// <param name='excluded'>
        /// Excluded connection Ids.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorDetailException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationHeaderResponse<WebPubSubSendToAllHeaders>> SendToAllWithHttpMessagesAsync(string endpoint, string hub, string apiVersion, string message, IList<string> excluded = default(IList<string>), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Check if the connection with the given connectionId exists.
        /// </summary>
        /// <param name='endpoint'>
        /// HTTP or HTTPS endpoint for the Web PubSub service instance.
        /// </param>
        /// <param name='hub'>
        /// Target hub name, which should start with alphabetic characters and
        /// only contain alpha-numeric characters or underscore.
        /// </param>
        /// <param name='connectionId'>
        /// The connection Id.
        /// </param>
        /// <param name='apiVersion'>
        /// The version of the REST APIs.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorDetailException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationHeaderResponse<WebPubSubConnectionExistsHeaders>> ConnectionExistsWithHttpMessagesAsync(string endpoint, string hub, string connectionId, string apiVersion, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Close the client connection.
        /// </summary>
        /// <param name='endpoint'>
        /// HTTP or HTTPS endpoint for the Web PubSub service instance.
        /// </param>
        /// <param name='hub'>
        /// Target hub name, which should start with alphabetic characters and
        /// only contain alpha-numeric characters or underscore.
        /// </param>
        /// <param name='connectionId'>
        /// Target connection Id.
        /// </param>
        /// <param name='apiVersion'>
        /// The version of the REST APIs.
        /// </param>
        /// <param name='reason'>
        /// The reason closing the client connection.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorDetailException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationHeaderResponse<WebPubSubCloseConnectionHeaders>> CloseConnectionWithHttpMessagesAsync(string endpoint, string hub, string connectionId, string apiVersion, string reason = default(string), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Send content inside request body to the specific connection.
        /// </summary>
        /// <param name='endpoint'>
        /// HTTP or HTTPS endpoint for the Web PubSub service instance.
        /// </param>
        /// <param name='hub'>
        /// Target hub name, which should start with alphabetic characters and
        /// only contain alpha-numeric characters or underscore.
        /// </param>
        /// <param name='connectionId'>
        /// The connection Id.
        /// </param>
        /// <param name='apiVersion'>
        /// The version of the REST APIs.
        /// </param>
        /// <param name='message'>
        /// The payload body.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorDetailException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationHeaderResponse<WebPubSubSendToConnectionHeaders>> SendToConnectionWithHttpMessagesAsync(string endpoint, string hub, string connectionId, string apiVersion, string message, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Check if there are any client connections inside the given group
        /// </summary>
        /// <param name='endpoint'>
        /// HTTP or HTTPS endpoint for the Web PubSub service instance.
        /// </param>
        /// <param name='hub'>
        /// Target hub name, which should start with alphabetic characters and
        /// only contain alpha-numeric characters or underscore.
        /// </param>
        /// <param name='group'>
        /// Target group name, which length should be greater than 0 and less
        /// than 1025.
        /// </param>
        /// <param name='apiVersion'>
        /// The version of the REST APIs.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorDetailException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationHeaderResponse<WebPubSubGroupExistsHeaders>> GroupExistsWithHttpMessagesAsync(string endpoint, string hub, string group, string apiVersion, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Close connections in the specific group.
        /// </summary>
        /// <param name='endpoint'>
        /// HTTP or HTTPS endpoint for the Web PubSub service instance.
        /// </param>
        /// <param name='hub'>
        /// Target hub name, which should start with alphabetic characters and
        /// only contain alpha-numeric characters or underscore.
        /// </param>
        /// <param name='group'>
        /// Target group name, which length should be greater than 0 and less
        /// than 1025.
        /// </param>
        /// <param name='apiVersion'>
        /// The version of the REST APIs.
        /// </param>
        /// <param name='excluded'>
        /// Exclude these connectionIds when closing the connections in the
        /// group.
        /// </param>
        /// <param name='reason'>
        /// The reason closing the client connection.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorDetailException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationHeaderResponse<WebPubSubCloseGroupConnectionsHeaders>> CloseGroupConnectionsWithHttpMessagesAsync(string endpoint, string hub, string group, string apiVersion, IList<string> excluded = default(IList<string>), string reason = default(string), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Send content inside request body to a group of connections.
        /// </summary>
        /// <param name='endpoint'>
        /// HTTP or HTTPS endpoint for the Web PubSub service instance.
        /// </param>
        /// <param name='hub'>
        /// Target hub name, which should start with alphabetic characters and
        /// only contain alpha-numeric characters or underscore.
        /// </param>
        /// <param name='group'>
        /// Target group name, which length should be greater than 0 and less
        /// than 1025.
        /// </param>
        /// <param name='apiVersion'>
        /// The version of the REST APIs.
        /// </param>
        /// <param name='message'>
        /// The payload body.
        /// </param>
        /// <param name='excluded'>
        /// Excluded connection Ids
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorDetailException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationHeaderResponse<WebPubSubSendToGroupHeaders>> SendToGroupWithHttpMessagesAsync(string endpoint, string hub, string group, string apiVersion, string message, IList<string> excluded = default(IList<string>), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Add a connection to the target group.
        /// </summary>
        /// <param name='endpoint'>
        /// HTTP or HTTPS endpoint for the Web PubSub service instance.
        /// </param>
        /// <param name='hub'>
        /// Target hub name, which should start with alphabetic characters and
        /// only contain alpha-numeric characters or underscore.
        /// </param>
        /// <param name='group'>
        /// Target group name, which length should be greater than 0 and less
        /// than 1025.
        /// </param>
        /// <param name='connectionId'>
        /// Target connection Id
        /// </param>
        /// <param name='apiVersion'>
        /// The version of the REST APIs.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorDetailException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationHeaderResponse<WebPubSubAddConnectionToGroupHeaders>> AddConnectionToGroupWithHttpMessagesAsync(string endpoint, string hub, string group, string connectionId, string apiVersion, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Remove a connection from the target group.
        /// </summary>
        /// <param name='endpoint'>
        /// HTTP or HTTPS endpoint for the Web PubSub service instance.
        /// </param>
        /// <param name='hub'>
        /// Target hub name, which should start with alphabetic characters and
        /// only contain alpha-numeric characters or underscore.
        /// </param>
        /// <param name='group'>
        /// Target group name, which length should be greater than 0 and less
        /// than 1025.
        /// </param>
        /// <param name='connectionId'>
        /// Target connection Id.
        /// </param>
        /// <param name='apiVersion'>
        /// The version of the REST APIs.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorDetailException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationHeaderResponse<WebPubSubRemoveConnectionFromGroupHeaders>> RemoveConnectionFromGroupWithHttpMessagesAsync(string endpoint, string hub, string group, string connectionId, string apiVersion, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Check if there are any client connections connected for the given
        /// user.
        /// </summary>
        /// <param name='endpoint'>
        /// HTTP or HTTPS endpoint for the Web PubSub service instance.
        /// </param>
        /// <param name='hub'>
        /// Target hub name, which should start with alphabetic characters and
        /// only contain alpha-numeric characters or underscore.
        /// </param>
        /// <param name='userId'>
        /// Target user Id.
        /// </param>
        /// <param name='apiVersion'>
        /// The version of the REST APIs.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorDetailException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationHeaderResponse<WebPubSubUserExistsHeaders>> UserExistsWithHttpMessagesAsync(string endpoint, string hub, string userId, string apiVersion, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Close connections for the specific user.
        /// </summary>
        /// <param name='endpoint'>
        /// HTTP or HTTPS endpoint for the Web PubSub service instance.
        /// </param>
        /// <param name='hub'>
        /// Target hub name, which should start with alphabetic characters and
        /// only contain alpha-numeric characters or underscore.
        /// </param>
        /// <param name='userId'>
        /// The user Id.
        /// </param>
        /// <param name='apiVersion'>
        /// The version of the REST APIs.
        /// </param>
        /// <param name='excluded'>
        /// Exclude these connectionIds when closing the connections for the
        /// user.
        /// </param>
        /// <param name='reason'>
        /// The reason closing the client connection.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorDetailException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationHeaderResponse<WebPubSubCloseUserConnectionsHeaders>> CloseUserConnectionsWithHttpMessagesAsync(string endpoint, string hub, string userId, string apiVersion, IList<string> excluded = default(IList<string>), string reason = default(string), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Send content inside request body to the specific user.
        /// </summary>
        /// <param name='endpoint'>
        /// HTTP or HTTPS endpoint for the Web PubSub service instance.
        /// </param>
        /// <param name='hub'>
        /// Target hub name, which should start with alphabetic characters and
        /// only contain alpha-numeric characters or underscore.
        /// </param>
        /// <param name='userId'>
        /// The user Id.
        /// </param>
        /// <param name='apiVersion'>
        /// The version of the REST APIs.
        /// </param>
        /// <param name='message'>
        /// The payload body.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorDetailException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationHeaderResponse<WebPubSubSendToUserHeaders>> SendToUserWithHttpMessagesAsync(string endpoint, string hub, string userId, string apiVersion, string message, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Add a user to the target group.
        /// </summary>
        /// <param name='endpoint'>
        /// HTTP or HTTPS endpoint for the Web PubSub service instance.
        /// </param>
        /// <param name='hub'>
        /// Target hub name, which should start with alphabetic characters and
        /// only contain alpha-numeric characters or underscore.
        /// </param>
        /// <param name='group'>
        /// Target group name, which length should be greater than 0 and less
        /// than 1025.
        /// </param>
        /// <param name='userId'>
        /// Target user Id.
        /// </param>
        /// <param name='apiVersion'>
        /// The version of the REST APIs.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorDetailException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationHeaderResponse<WebPubSubAddUserToGroupHeaders>> AddUserToGroupWithHttpMessagesAsync(string endpoint, string hub, string group, string userId, string apiVersion, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Remove a user from the target group.
        /// </summary>
        /// <param name='endpoint'>
        /// HTTP or HTTPS endpoint for the Web PubSub service instance.
        /// </param>
        /// <param name='hub'>
        /// Target hub name, which should start with alphabetic characters and
        /// only contain alpha-numeric characters or underscore.
        /// </param>
        /// <param name='group'>
        /// Target group name, which length should be greater than 0 and less
        /// than 1025.
        /// </param>
        /// <param name='userId'>
        /// Target user Id.
        /// </param>
        /// <param name='apiVersion'>
        /// The version of the REST APIs.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorDetailException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationHeaderResponse<WebPubSubRemoveUserFromGroupHeaders>> RemoveUserFromGroupWithHttpMessagesAsync(string endpoint, string hub, string group, string userId, string apiVersion, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Remove a user from all groups.
        /// </summary>
        /// <param name='endpoint'>
        /// HTTP or HTTPS endpoint for the Web PubSub service instance.
        /// </param>
        /// <param name='hub'>
        /// Target hub name, which should start with alphabetic characters and
        /// only contain alpha-numeric characters or underscore.
        /// </param>
        /// <param name='userId'>
        /// Target user Id.
        /// </param>
        /// <param name='apiVersion'>
        /// The version of the REST APIs.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorDetailException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationHeaderResponse<WebPubSubRemoveUserFromAllGroupsHeaders>> RemoveUserFromAllGroupsWithHttpMessagesAsync(string endpoint, string hub, string userId, string apiVersion, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Grant permission to the connection.
        /// </summary>
        /// <param name='endpoint'>
        /// HTTP or HTTPS endpoint for the Web PubSub service instance.
        /// </param>
        /// <param name='hub'>
        /// Target hub name, which should start with alphabetic characters and
        /// only contain alpha-numeric characters or underscore.
        /// </param>
        /// <param name='permission'>
        /// The permission: current supported actions are joinLeaveGroup and
        /// sendToGroup. Possible values include: 'sendToGroup',
        /// 'joinLeaveGroup'
        /// </param>
        /// <param name='connectionId'>
        /// Target connection Id.
        /// </param>
        /// <param name='apiVersion'>
        /// The version of the REST APIs.
        /// </param>
        /// <param name='targetName'>
        /// The meaning of the target depends on the specific permission. For
        /// joinLeaveGroup and sendToGroup, targetName is a required parameter
        /// standing for the group name.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorDetailException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationHeaderResponse<WebPubSubGrantPermissionHeaders>> GrantPermissionWithHttpMessagesAsync(string endpoint, string hub, string permission, string connectionId, string apiVersion, string targetName = default(string), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Revoke permission for the connection.
        /// </summary>
        /// <param name='endpoint'>
        /// HTTP or HTTPS endpoint for the Web PubSub service instance.
        /// </param>
        /// <param name='hub'>
        /// Target hub name, which should start with alphabetic characters and
        /// only contain alpha-numeric characters or underscore.
        /// </param>
        /// <param name='permission'>
        /// The permission: current supported actions are joinLeaveGroup and
        /// sendToGroup. Possible values include: 'sendToGroup',
        /// 'joinLeaveGroup'
        /// </param>
        /// <param name='connectionId'>
        /// Target connection Id.
        /// </param>
        /// <param name='apiVersion'>
        /// The version of the REST APIs.
        /// </param>
        /// <param name='targetName'>
        /// The meaning of the target depends on the specific permission. For
        /// joinLeaveGroup and sendToGroup, targetName is a required parameter
        /// standing for the group name.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorDetailException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationHeaderResponse<WebPubSubRevokePermissionHeaders>> RevokePermissionWithHttpMessagesAsync(string endpoint, string hub, string permission, string connectionId, string apiVersion, string targetName = default(string), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Check if a connection has permission to the specified action.
        /// </summary>
        /// <param name='endpoint'>
        /// HTTP or HTTPS endpoint for the Web PubSub service instance.
        /// </param>
        /// <param name='hub'>
        /// Target hub name, which should start with alphabetic characters and
        /// only contain alpha-numeric characters or underscore.
        /// </param>
        /// <param name='permission'>
        /// The permission: current supported actions are joinLeaveGroup and
        /// sendToGroup. Possible values include: 'sendToGroup',
        /// 'joinLeaveGroup'
        /// </param>
        /// <param name='connectionId'>
        /// Target connection Id.
        /// </param>
        /// <param name='apiVersion'>
        /// The version of the REST APIs.
        /// </param>
        /// <param name='targetName'>
        /// The meaning of the target depends on the specific permission. For
        /// joinLeaveGroup and sendToGroup, targetName is a required parameter
        /// standing for the group name.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorDetailException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationHeaderResponse<WebPubSubCheckPermissionHeaders>> CheckPermissionWithHttpMessagesAsync(string endpoint, string hub, string permission, string connectionId, string apiVersion, string targetName = default(string), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
    }
}
