// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

namespace Azure.ResourceManager.Cognitivesearch.Models
{
    /// <summary> The capacity will autoscale between the minimum and maximum number of vCores based on the usage of your index. </summary>
    public partial class CapacityUpdate
    {
        /// <summary> Initializes a new instance of CapacityUpdate. </summary>
        public CapacityUpdate()
        {
        }

        /// <summary> The minimum number of vCores that the index will consume. Represented with discrete values: 0.2, 0.5. 1, 2, 3, … to 16. </summary>
        public float? MinVCores { get; set; }
        /// <summary> The maximum number of vCores that the index can consume. Represented with discrete values: 0.2, 0.5. 1, 2, 3, … to 16. </summary>
        public float? MaxVCores { get; set; }
        /// <summary>
        /// Pausing strategy for the index
        /// Please note <see cref="Pause"/> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
        /// The available derived classes include <see cref="DelayPause"/> and <see cref="NonePause"/>.
        /// </summary>
        public Pause AutoPause { get; set; }
    }
}
