// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;
using Azure.ResourceManager.Cognitivesearch;
using Azure.ResourceManager.Models;

namespace Azure.ResourceManager.Cognitivesearch.Models
{
    /// <summary> Model factory for models. </summary>
    public static partial class ArmCognitivesearchModelFactory
    {
        /// <summary> Initializes a new instance of IndexData. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="tags"> The tags. </param>
        /// <param name="location"> The location. </param>
        /// <param name="provisioningState"> The current provisioning state of the index. </param>
        /// <param name="endpoint"> The endpoint at which the index can be accessed. </param>
        /// <param name="queryCapacity"> The capacity allocated to the index for querying. </param>
        /// <param name="indexingCapacity"> The capacity allocated to the index for indexing documents. </param>
        /// <returns> A new <see cref="Cognitivesearch.IndexData"/> instance for mocking. </returns>
        public static IndexData IndexData(ResourceIdentifier id = null, string name = null, ResourceType resourceType = default, SystemData systemData = null, IDictionary<string, string> tags = null, AzureLocation location = default, ProvisioningState? provisioningState = null, string endpoint = null, Capacity queryCapacity = null, Capacity indexingCapacity = null)
        {
            tags ??= new Dictionary<string, string>();

            return new IndexData(id, name, resourceType, systemData, tags, location, provisioningState, endpoint, queryCapacity, indexingCapacity);
        }
    }
}
