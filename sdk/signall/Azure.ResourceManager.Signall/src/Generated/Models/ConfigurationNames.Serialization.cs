// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.Signall.Models
{
    public partial class ConfigurationNames
    {
        internal static ConfigurationNames DeserializeConfigurationNames(JsonElement element)
        {
            Optional<string> targetService = default;
            Optional<ClientType> clientType = default;
            Optional<AuthType> authType = default;
            Optional<IReadOnlyList<ConfigurationName>> names = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("targetService"))
                {
                    targetService = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("clientType"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    clientType = new ClientType(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("authType"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    authType = new AuthType(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("names"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<ConfigurationName> array = new List<ConfigurationName>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(ConfigurationName.DeserializeConfigurationName(item));
                    }
                    names = array;
                    continue;
                }
            }
            return new ConfigurationNames(targetService.Value, Optional.ToNullable(clientType), Optional.ToNullable(authType), Optional.ToList(names));
        }
    }
}
