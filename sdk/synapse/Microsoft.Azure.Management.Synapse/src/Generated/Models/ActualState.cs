// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Synapse.Models
{
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;
    using System.Runtime;
    using System.Runtime.Serialization;

    /// <summary>
    /// Defines values for ActualState.
    /// </summary>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum ActualState
    {
        [EnumMember(Value = "Enabling")]
        Enabling,
        [EnumMember(Value = "Enabled")]
        Enabled,
        [EnumMember(Value = "Disabling")]
        Disabling,
        [EnumMember(Value = "Disabled")]
        Disabled,
        [EnumMember(Value = "Unknown")]
        Unknown
    }
    internal static class ActualStateEnumExtension
    {
        internal static string ToSerializedValue(this ActualState? value)
        {
            return value == null ? null : ((ActualState)value).ToSerializedValue();
        }

        internal static string ToSerializedValue(this ActualState value)
        {
            switch( value )
            {
                case ActualState.Enabling:
                    return "Enabling";
                case ActualState.Enabled:
                    return "Enabled";
                case ActualState.Disabling:
                    return "Disabling";
                case ActualState.Disabled:
                    return "Disabled";
                case ActualState.Unknown:
                    return "Unknown";
            }
            return null;
        }

        internal static ActualState? ParseActualState(this string value)
        {
            switch( value )
            {
                case "Enabling":
                    return ActualState.Enabling;
                case "Enabled":
                    return ActualState.Enabled;
                case "Disabling":
                    return ActualState.Disabling;
                case "Disabled":
                    return ActualState.Disabled;
                case "Unknown":
                    return ActualState.Unknown;
            }
            return null;
        }
    }
}
