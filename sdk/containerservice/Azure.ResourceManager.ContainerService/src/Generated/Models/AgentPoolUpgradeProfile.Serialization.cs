// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.ContainerService.Models
{
    public partial class AgentPoolUpgradeProfile
    {
        internal static AgentPoolUpgradeProfile DeserializeAgentPoolUpgradeProfile(JsonElement element)
        {
            Optional<string> id = default;
            Optional<string> name = default;
            Optional<string> type = default;
            string kubernetesVersion = default;
            OSType osType = default;
            Optional<IReadOnlyList<AgentPoolUpgradeProfilePropertiesUpgradesItem>> upgrades = default;
            Optional<string> latestNodeImageVersion = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("id"))
                {
                    id = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("name"))
                {
                    name = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("type"))
                {
                    type = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("properties"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    foreach (var property0 in property.Value.EnumerateObject())
                    {
                        if (property0.NameEquals("kubernetesVersion"))
                        {
                            kubernetesVersion = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("osType"))
                        {
                            osType = new OSType(property0.Value.GetString());
                            continue;
                        }
                        if (property0.NameEquals("upgrades"))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                property0.ThrowNonNullablePropertyIsNull();
                                continue;
                            }
                            List<AgentPoolUpgradeProfilePropertiesUpgradesItem> array = new List<AgentPoolUpgradeProfilePropertiesUpgradesItem>();
                            foreach (var item in property0.Value.EnumerateArray())
                            {
                                array.Add(AgentPoolUpgradeProfilePropertiesUpgradesItem.DeserializeAgentPoolUpgradeProfilePropertiesUpgradesItem(item));
                            }
                            upgrades = array;
                            continue;
                        }
                        if (property0.NameEquals("latestNodeImageVersion"))
                        {
                            latestNodeImageVersion = property0.Value.GetString();
                            continue;
                        }
                    }
                    continue;
                }
            }
            return new AgentPoolUpgradeProfile(id.Value, name.Value, type.Value, kubernetesVersion, osType, Optional.ToList(upgrades), latestNodeImageVersion.Value);
        }
    }
}
