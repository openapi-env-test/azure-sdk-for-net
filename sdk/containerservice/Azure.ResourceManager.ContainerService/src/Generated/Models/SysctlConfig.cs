// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

namespace Azure.ResourceManager.ContainerService.Models
{
    /// <summary> Sysctl settings for Linux agent nodes. </summary>
    public partial class SysctlConfig
    {
        /// <summary> Initializes a new instance of SysctlConfig. </summary>
        public SysctlConfig()
        {
        }

        /// <summary> Initializes a new instance of SysctlConfig. </summary>
        /// <param name="netCoreSomaxconn"> Sysctl setting net.core.somaxconn. </param>
        /// <param name="netCoreNetdevMaxBacklog"> Sysctl setting net.core.netdev_max_backlog. </param>
        /// <param name="netCoreRmemDefault"> Sysctl setting net.core.rmem_default. </param>
        /// <param name="netCoreRmemMax"> Sysctl setting net.core.rmem_max. </param>
        /// <param name="netCoreWmemDefault"> Sysctl setting net.core.wmem_default. </param>
        /// <param name="netCoreWmemMax"> Sysctl setting net.core.wmem_max. </param>
        /// <param name="netCoreOptmemMax"> Sysctl setting net.core.optmem_max. </param>
        /// <param name="netIpv4TcpMaxSynBacklog"> Sysctl setting net.ipv4.tcp_max_syn_backlog. </param>
        /// <param name="netIpv4TcpMaxTwBuckets"> Sysctl setting net.ipv4.tcp_max_tw_buckets. </param>
        /// <param name="netIpv4TcpFinTimeout"> Sysctl setting net.ipv4.tcp_fin_timeout. </param>
        /// <param name="netIpv4TcpKeepaliveTime"> Sysctl setting net.ipv4.tcp_keepalive_time. </param>
        /// <param name="netIpv4TcpKeepaliveProbes"> Sysctl setting net.ipv4.tcp_keepalive_probes. </param>
        /// <param name="netIpv4TcpkeepaliveIntvl"> Sysctl setting net.ipv4.tcp_keepalive_intvl. </param>
        /// <param name="netIpv4TcpTwReuse"> Sysctl setting net.ipv4.tcp_tw_reuse. </param>
        /// <param name="netIpv4IpLocalPortRange"> Sysctl setting net.ipv4.ip_local_port_range. </param>
        /// <param name="netIpv4NeighDefaultGcThresh1"> Sysctl setting net.ipv4.neigh.default.gc_thresh1. </param>
        /// <param name="netIpv4NeighDefaultGcThresh2"> Sysctl setting net.ipv4.neigh.default.gc_thresh2. </param>
        /// <param name="netIpv4NeighDefaultGcThresh3"> Sysctl setting net.ipv4.neigh.default.gc_thresh3. </param>
        /// <param name="netNetfilterNfConntrackMax"> Sysctl setting net.netfilter.nf_conntrack_max. </param>
        /// <param name="netNetfilterNfConntrackBuckets"> Sysctl setting net.netfilter.nf_conntrack_buckets. </param>
        /// <param name="fsInotifyMaxUserWatches"> Sysctl setting fs.inotify.max_user_watches. </param>
        /// <param name="fsFileMax"> Sysctl setting fs.file-max. </param>
        /// <param name="fsAioMaxNr"> Sysctl setting fs.aio-max-nr. </param>
        /// <param name="fsNrOpen"> Sysctl setting fs.nr_open. </param>
        /// <param name="kernelThreadsMax"> Sysctl setting kernel.threads-max. </param>
        /// <param name="vmMaxMapCount"> Sysctl setting vm.max_map_count. </param>
        /// <param name="vmSwappiness"> Sysctl setting vm.swappiness. </param>
        /// <param name="vmVfsCachePressure"> Sysctl setting vm.vfs_cache_pressure. </param>
        internal SysctlConfig(int? netCoreSomaxconn, int? netCoreNetdevMaxBacklog, int? netCoreRmemDefault, int? netCoreRmemMax, int? netCoreWmemDefault, int? netCoreWmemMax, int? netCoreOptmemMax, int? netIpv4TcpMaxSynBacklog, int? netIpv4TcpMaxTwBuckets, int? netIpv4TcpFinTimeout, int? netIpv4TcpKeepaliveTime, int? netIpv4TcpKeepaliveProbes, int? netIpv4TcpkeepaliveIntvl, bool? netIpv4TcpTwReuse, string netIpv4IpLocalPortRange, int? netIpv4NeighDefaultGcThresh1, int? netIpv4NeighDefaultGcThresh2, int? netIpv4NeighDefaultGcThresh3, int? netNetfilterNfConntrackMax, int? netNetfilterNfConntrackBuckets, int? fsInotifyMaxUserWatches, int? fsFileMax, int? fsAioMaxNr, int? fsNrOpen, int? kernelThreadsMax, int? vmMaxMapCount, int? vmSwappiness, int? vmVfsCachePressure)
        {
            NetCoreSomaxconn = netCoreSomaxconn;
            NetCoreNetdevMaxBacklog = netCoreNetdevMaxBacklog;
            NetCoreRmemDefault = netCoreRmemDefault;
            NetCoreRmemMax = netCoreRmemMax;
            NetCoreWmemDefault = netCoreWmemDefault;
            NetCoreWmemMax = netCoreWmemMax;
            NetCoreOptmemMax = netCoreOptmemMax;
            NetIpv4TcpMaxSynBacklog = netIpv4TcpMaxSynBacklog;
            NetIpv4TcpMaxTwBuckets = netIpv4TcpMaxTwBuckets;
            NetIpv4TcpFinTimeout = netIpv4TcpFinTimeout;
            NetIpv4TcpKeepaliveTime = netIpv4TcpKeepaliveTime;
            NetIpv4TcpKeepaliveProbes = netIpv4TcpKeepaliveProbes;
            NetIpv4TcpkeepaliveIntvl = netIpv4TcpkeepaliveIntvl;
            NetIpv4TcpTwReuse = netIpv4TcpTwReuse;
            NetIpv4IpLocalPortRange = netIpv4IpLocalPortRange;
            NetIpv4NeighDefaultGcThresh1 = netIpv4NeighDefaultGcThresh1;
            NetIpv4NeighDefaultGcThresh2 = netIpv4NeighDefaultGcThresh2;
            NetIpv4NeighDefaultGcThresh3 = netIpv4NeighDefaultGcThresh3;
            NetNetfilterNfConntrackMax = netNetfilterNfConntrackMax;
            NetNetfilterNfConntrackBuckets = netNetfilterNfConntrackBuckets;
            FsInotifyMaxUserWatches = fsInotifyMaxUserWatches;
            FsFileMax = fsFileMax;
            FsAioMaxNr = fsAioMaxNr;
            FsNrOpen = fsNrOpen;
            KernelThreadsMax = kernelThreadsMax;
            VmMaxMapCount = vmMaxMapCount;
            VmSwappiness = vmSwappiness;
            VmVfsCachePressure = vmVfsCachePressure;
        }

        /// <summary> Sysctl setting net.core.somaxconn. </summary>
        public int? NetCoreSomaxconn { get; set; }
        /// <summary> Sysctl setting net.core.netdev_max_backlog. </summary>
        public int? NetCoreNetdevMaxBacklog { get; set; }
        /// <summary> Sysctl setting net.core.rmem_default. </summary>
        public int? NetCoreRmemDefault { get; set; }
        /// <summary> Sysctl setting net.core.rmem_max. </summary>
        public int? NetCoreRmemMax { get; set; }
        /// <summary> Sysctl setting net.core.wmem_default. </summary>
        public int? NetCoreWmemDefault { get; set; }
        /// <summary> Sysctl setting net.core.wmem_max. </summary>
        public int? NetCoreWmemMax { get; set; }
        /// <summary> Sysctl setting net.core.optmem_max. </summary>
        public int? NetCoreOptmemMax { get; set; }
        /// <summary> Sysctl setting net.ipv4.tcp_max_syn_backlog. </summary>
        public int? NetIpv4TcpMaxSynBacklog { get; set; }
        /// <summary> Sysctl setting net.ipv4.tcp_max_tw_buckets. </summary>
        public int? NetIpv4TcpMaxTwBuckets { get; set; }
        /// <summary> Sysctl setting net.ipv4.tcp_fin_timeout. </summary>
        public int? NetIpv4TcpFinTimeout { get; set; }
        /// <summary> Sysctl setting net.ipv4.tcp_keepalive_time. </summary>
        public int? NetIpv4TcpKeepaliveTime { get; set; }
        /// <summary> Sysctl setting net.ipv4.tcp_keepalive_probes. </summary>
        public int? NetIpv4TcpKeepaliveProbes { get; set; }
        /// <summary> Sysctl setting net.ipv4.tcp_keepalive_intvl. </summary>
        public int? NetIpv4TcpkeepaliveIntvl { get; set; }
        /// <summary> Sysctl setting net.ipv4.tcp_tw_reuse. </summary>
        public bool? NetIpv4TcpTwReuse { get; set; }
        /// <summary> Sysctl setting net.ipv4.ip_local_port_range. </summary>
        public string NetIpv4IpLocalPortRange { get; set; }
        /// <summary> Sysctl setting net.ipv4.neigh.default.gc_thresh1. </summary>
        public int? NetIpv4NeighDefaultGcThresh1 { get; set; }
        /// <summary> Sysctl setting net.ipv4.neigh.default.gc_thresh2. </summary>
        public int? NetIpv4NeighDefaultGcThresh2 { get; set; }
        /// <summary> Sysctl setting net.ipv4.neigh.default.gc_thresh3. </summary>
        public int? NetIpv4NeighDefaultGcThresh3 { get; set; }
        /// <summary> Sysctl setting net.netfilter.nf_conntrack_max. </summary>
        public int? NetNetfilterNfConntrackMax { get; set; }
        /// <summary> Sysctl setting net.netfilter.nf_conntrack_buckets. </summary>
        public int? NetNetfilterNfConntrackBuckets { get; set; }
        /// <summary> Sysctl setting fs.inotify.max_user_watches. </summary>
        public int? FsInotifyMaxUserWatches { get; set; }
        /// <summary> Sysctl setting fs.file-max. </summary>
        public int? FsFileMax { get; set; }
        /// <summary> Sysctl setting fs.aio-max-nr. </summary>
        public int? FsAioMaxNr { get; set; }
        /// <summary> Sysctl setting fs.nr_open. </summary>
        public int? FsNrOpen { get; set; }
        /// <summary> Sysctl setting kernel.threads-max. </summary>
        public int? KernelThreadsMax { get; set; }
        /// <summary> Sysctl setting vm.max_map_count. </summary>
        public int? VmMaxMapCount { get; set; }
        /// <summary> Sysctl setting vm.swappiness. </summary>
        public int? VmSwappiness { get; set; }
        /// <summary> Sysctl setting vm.vfs_cache_pressure. </summary>
        public int? VmVfsCachePressure { get; set; }
    }
}
