// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.ContainerService.Models
{
    /// <summary> Profile for the container service agent pool. </summary>
    public partial class ManagedClusterAgentPoolProfile : ManagedClusterAgentPoolProfileProperties
    {
        /// <summary> Initializes a new instance of ManagedClusterAgentPoolProfile. </summary>
        /// <param name="name"> Unique name of the agent pool profile in the context of the subscription and resource group. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="name"/> is null. </exception>
        public ManagedClusterAgentPoolProfile(string name)
        {
            if (name == null)
            {
                throw new ArgumentNullException(nameof(name));
            }

            Name = name;
        }

        /// <summary> Initializes a new instance of ManagedClusterAgentPoolProfile. </summary>
        /// <param name="count"> Number of agents (VMs) to host docker containers. Allowed values must be in the range of 0 to 100 (inclusive) for user pools and in the range of 1 to 100 (inclusive) for system pools. The default value is 1. </param>
        /// <param name="vmSize"> Size of agent VMs. </param>
        /// <param name="osDiskSizeGB"> OS Disk Size in GB to be used to specify the disk size for every machine in this master/agent pool. If you specify 0, it will apply the default osDisk size according to the vmSize specified. </param>
        /// <param name="osDiskType"> OS disk type to be used for machines in a given agent pool. Allowed values are &apos;Ephemeral&apos; and &apos;Managed&apos;. Defaults to &apos;Managed&apos;. May not be changed after creation. </param>
        /// <param name="kubeletDiskType"> KubeletDiskType determines the placement of emptyDir volumes, container runtime data root, and Kubelet ephemeral storage. Currently allows one value, OS, resulting in Kubelet using the OS disk for data. </param>
        /// <param name="vnetSubnetID"> VNet SubnetID specifies the VNet&apos;s subnet identifier for nodes and maybe pods. </param>
        /// <param name="podSubnetID"> Pod SubnetID specifies the VNet&apos;s subnet identifier for pods. </param>
        /// <param name="maxPods"> Maximum number of pods that can run on a node. </param>
        /// <param name="osType"> OsType to be used to specify os type. Choose from Linux and Windows. Default to Linux. </param>
        /// <param name="maxCount"> Maximum number of nodes for auto-scaling. </param>
        /// <param name="minCount"> Minimum number of nodes for auto-scaling. </param>
        /// <param name="enableAutoScaling"> Whether to enable auto-scaler. </param>
        /// <param name="type"> AgentPoolType represents types of an agent pool. </param>
        /// <param name="mode"> AgentPoolMode represents mode of an agent pool. </param>
        /// <param name="orchestratorVersion"> Version of orchestrator specified when creating the managed cluster. </param>
        /// <param name="nodeImageVersion"> Version of node image. </param>
        /// <param name="upgradeSettings"> Settings for upgrading the agentpool. </param>
        /// <param name="provisioningState"> The current deployment or provisioning state, which only appears in the response. </param>
        /// <param name="powerState"> Describes whether the Agent Pool is Running or Stopped. </param>
        /// <param name="availabilityZones"> Availability zones for nodes. Must use VirtualMachineScaleSets AgentPoolType. </param>
        /// <param name="enableNodePublicIP"> Enable public IP for nodes. </param>
        /// <param name="scaleSetPriority"> ScaleSetPriority to be used to specify virtual machine scale set priority. Default to regular. </param>
        /// <param name="scaleSetEvictionPolicy"> ScaleSetEvictionPolicy to be used to specify eviction policy for Spot virtual machine scale set. Default to Delete. </param>
        /// <param name="spotMaxPrice"> SpotMaxPrice to be used to specify the maximum price you are willing to pay in US Dollars. Possible values are any decimal value greater than zero or -1 which indicates default price to be up-to on-demand. </param>
        /// <param name="tags"> Agent pool tags to be persisted on the agent pool virtual machine scale set. </param>
        /// <param name="nodeLabels"> Agent pool node labels to be persisted across all nodes in agent pool. </param>
        /// <param name="nodeTaints"> Taints added to new nodes during node pool create and scale. For example, key=value:NoSchedule. </param>
        /// <param name="proximityPlacementGroupID"> The ID for Proximity Placement Group. </param>
        /// <param name="kubeletConfig"> KubeletConfig specifies the configuration of kubelet on agent nodes. </param>
        /// <param name="linuxOSConfig"> LinuxOSConfig specifies the OS configuration of linux agent nodes. </param>
        /// <param name="enableEncryptionAtHost"> Whether to enable EncryptionAtHost. </param>
        /// <param name="name"> Unique name of the agent pool profile in the context of the subscription and resource group. </param>
        internal ManagedClusterAgentPoolProfile(int? count, ContainerServiceVMSizeTypes? vmSize, int? osDiskSizeGB, OSDiskType? osDiskType, KubeletDiskType? kubeletDiskType, string vnetSubnetID, string podSubnetID, int? maxPods, OSType? osType, int? maxCount, int? minCount, bool? enableAutoScaling, AgentPoolType? type, AgentPoolMode? mode, string orchestratorVersion, string nodeImageVersion, AgentPoolUpgradeSettings upgradeSettings, string provisioningState, PowerState powerState, IList<string> availabilityZones, bool? enableNodePublicIP, ScaleSetPriority? scaleSetPriority, ScaleSetEvictionPolicy? scaleSetEvictionPolicy, float? spotMaxPrice, IDictionary<string, string> tags, IDictionary<string, string> nodeLabels, IList<string> nodeTaints, string proximityPlacementGroupID, KubeletConfig kubeletConfig, LinuxOSConfig linuxOSConfig, bool? enableEncryptionAtHost, string name) : base(count, vmSize, osDiskSizeGB, osDiskType, kubeletDiskType, vnetSubnetID, podSubnetID, maxPods, osType, maxCount, minCount, enableAutoScaling, type, mode, orchestratorVersion, nodeImageVersion, upgradeSettings, provisioningState, powerState, availabilityZones, enableNodePublicIP, scaleSetPriority, scaleSetEvictionPolicy, spotMaxPrice, tags, nodeLabels, nodeTaints, proximityPlacementGroupID, kubeletConfig, linuxOSConfig, enableEncryptionAtHost)
        {
            Name = name;
        }

        /// <summary> Unique name of the agent pool profile in the context of the subscription and resource group. </summary>
        public string Name { get; set; }
    }
}
