// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

namespace Azure.ResourceManager.ContainerService.Models
{
    /// <summary> Profile of network configuration. </summary>
    public partial class ContainerServiceNetworkProfile
    {
        /// <summary> Initializes a new instance of ContainerServiceNetworkProfile. </summary>
        public ContainerServiceNetworkProfile()
        {
        }

        /// <summary> Initializes a new instance of ContainerServiceNetworkProfile. </summary>
        /// <param name="networkPlugin"> Network plugin used for building Kubernetes network. </param>
        /// <param name="networkPolicy"> Network policy used for building Kubernetes network. </param>
        /// <param name="networkMode"> Network mode used for building Kubernetes network. </param>
        /// <param name="podCidr"> A CIDR notation IP range from which to assign pod IPs when kubenet is used. </param>
        /// <param name="serviceCidr"> A CIDR notation IP range from which to assign service cluster IPs. It must not overlap with any Subnet IP ranges. </param>
        /// <param name="dnsServiceIP"> An IP address assigned to the Kubernetes DNS service. It must be within the Kubernetes service address range specified in serviceCidr. </param>
        /// <param name="dockerBridgeCidr"> A CIDR notation IP range assigned to the Docker bridge network. It must not overlap with any Subnet IP ranges or the Kubernetes service address range. </param>
        /// <param name="outboundType"> The outbound (egress) routing method. </param>
        /// <param name="loadBalancerSku"> The load balancer sku for the managed cluster. </param>
        /// <param name="loadBalancerProfile"> Profile of the cluster load balancer. </param>
        internal ContainerServiceNetworkProfile(NetworkPlugin? networkPlugin, NetworkPolicy? networkPolicy, NetworkMode? networkMode, string podCidr, string serviceCidr, string dnsServiceIP, string dockerBridgeCidr, OutboundType? outboundType, LoadBalancerSku? loadBalancerSku, ManagedClusterLoadBalancerProfile loadBalancerProfile)
        {
            NetworkPlugin = networkPlugin;
            NetworkPolicy = networkPolicy;
            NetworkMode = networkMode;
            PodCidr = podCidr;
            ServiceCidr = serviceCidr;
            DnsServiceIP = dnsServiceIP;
            DockerBridgeCidr = dockerBridgeCidr;
            OutboundType = outboundType;
            LoadBalancerSku = loadBalancerSku;
            LoadBalancerProfile = loadBalancerProfile;
        }

        /// <summary> Network plugin used for building Kubernetes network. </summary>
        public NetworkPlugin? NetworkPlugin { get; set; }
        /// <summary> Network policy used for building Kubernetes network. </summary>
        public NetworkPolicy? NetworkPolicy { get; set; }
        /// <summary> Network mode used for building Kubernetes network. </summary>
        public NetworkMode? NetworkMode { get; set; }
        /// <summary> A CIDR notation IP range from which to assign pod IPs when kubenet is used. </summary>
        public string PodCidr { get; set; }
        /// <summary> A CIDR notation IP range from which to assign service cluster IPs. It must not overlap with any Subnet IP ranges. </summary>
        public string ServiceCidr { get; set; }
        /// <summary> An IP address assigned to the Kubernetes DNS service. It must be within the Kubernetes service address range specified in serviceCidr. </summary>
        public string DnsServiceIP { get; set; }
        /// <summary> A CIDR notation IP range assigned to the Docker bridge network. It must not overlap with any Subnet IP ranges or the Kubernetes service address range. </summary>
        public string DockerBridgeCidr { get; set; }
        /// <summary> The outbound (egress) routing method. </summary>
        public OutboundType? OutboundType { get; set; }
        /// <summary> The load balancer sku for the managed cluster. </summary>
        public LoadBalancerSku? LoadBalancerSku { get; set; }
        /// <summary> Profile of the cluster load balancer. </summary>
        public ManagedClusterLoadBalancerProfile LoadBalancerProfile { get; set; }
    }
}
