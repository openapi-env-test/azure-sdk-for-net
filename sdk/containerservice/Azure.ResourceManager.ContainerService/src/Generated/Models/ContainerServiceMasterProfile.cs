// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace Azure.ResourceManager.ContainerService.Models
{
    /// <summary> Profile for the container service master. </summary>
    internal partial class ContainerServiceMasterProfile
    {
        /// <summary> Initializes a new instance of ContainerServiceMasterProfile. </summary>
        /// <param name="dnsPrefix"> DNS prefix to be used to create the FQDN for the master pool. </param>
        /// <param name="vmSize"> Size of agent VMs. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="dnsPrefix"/> is null. </exception>
        internal ContainerServiceMasterProfile(string dnsPrefix, ContainerServiceVMSizeTypes vmSize)
        {
            if (dnsPrefix == null)
            {
                throw new ArgumentNullException(nameof(dnsPrefix));
            }

            DnsPrefix = dnsPrefix;
            VmSize = vmSize;
        }

        /// <summary> Number of masters (VMs) in the container service cluster. Allowed values are 1, 3, and 5. The default value is 1. </summary>
        public Count? Count { get; }
        /// <summary> DNS prefix to be used to create the FQDN for the master pool. </summary>
        public string DnsPrefix { get; }
        /// <summary> Size of agent VMs. </summary>
        public ContainerServiceVMSizeTypes VmSize { get; }
        /// <summary> OS Disk Size in GB to be used to specify the disk size for every machine in this master/agent pool. If you specify 0, it will apply the default osDisk size according to the vmSize specified. </summary>
        public int? OsDiskSizeGB { get; }
        /// <summary> VNet SubnetID specifies the VNet&apos;s subnet identifier. </summary>
        public string VnetSubnetID { get; }
        /// <summary> FirstConsecutiveStaticIP used to specify the first static ip of masters. </summary>
        public string FirstConsecutiveStaticIP { get; }
        /// <summary> Storage profile specifies what kind of storage used. Choose from StorageAccount and ManagedDisks. Leave it empty, we will choose for you based on the orchestrator choice. </summary>
        public ContainerServiceStorageProfileTypes? StorageProfile { get; }
        /// <summary> FQDN for the master pool. </summary>
        public string Fqdn { get; }
    }
}
